{"ast":null,"code":"var _jsxFileName = \"/Users/zhangfangce/Desktop/CIS-550/website/client/src/pages/GenrePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // For navigation\nimport \"../style/GenrePage.css\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GenrePage() {\n  _s();\n  const [topGenres, setTopGenres] = useState([]);\n  const [artists, setArtists] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"\"); // For the dropdown\n  const [error, setError] = useState(\"\");\n  const [artistError, setArtistError] = useState(\"\");\n  const history = useHistory(); // For navigation\n\n  // Fetch artists for the dropdown on mount\n  useEffect(() => {\n    const fetchArtists = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/artists\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch artists. Status: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // Assuming artists are in `rows`\n        if (Array.isArray(data.rows)) {\n          setArtists(data.rows);\n        } else {\n          throw new Error(\"Invalid response structure: Expected 'rows' to be an array\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching artists:\", error);\n        setError(\"Failed to load artists.\");\n      }\n    };\n    fetchArtists();\n  }, []);\n\n  // Fetch top genres for the selected artist\n  const fetchTopGenresByArtist = async e => {\n    e.preventDefault();\n    setArtistError(\"\");\n    setTopGenres([]);\n    if (!selectedArtist) {\n      setArtistError(\"Please select an artist.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/artists/${encodeURIComponent(selectedArtist)}/top-genres`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch top genres. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setTopGenres(data.topGenres);\n    } catch (error) {\n      console.error(\"Error fetching top genres for artist:\", error);\n      setArtistError(\"Failed to load top genres for artist.\");\n    }\n  };\n\n  // Navigate back to the main menu\n  const handleBackToMenu = () => {\n    history.push(\"/\"); // Navigate back to the main menu\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/\",\n            children: \"HomePage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/sound\",\n            children: \"Sound Lab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/genre\",\n            children: \"GenrePage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/collaboration\",\n            children: \"Collaboration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"page-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"top-genres\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDFA4 Top Genres for Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: fetchTopGenresByArtist,\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"artist-select\",\n            value: selectedArtist,\n            onChange: e => setSelectedArtist(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select an Artist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), Array.isArray(artists) && artists.map(artist => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: artist.artist,\n              children: artist.artist\n            }, artist.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"artist-form-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Fetch Top Genres\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), artistError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: artistError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 27\n        }, this), topGenres.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: topGenres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [genre.genre_name, \" (\", genre.track_count, \" tracks)\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-message\",\n          children: \"No genres found for this artist.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"back-menu-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"back-menu-button\",\n          onClick: handleBackToMenu,\n          children: \"Back to Main Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(GenrePage, \"aHmUkcBjryX+bwqg5iLFk0Zp5iY=\", false, function () {\n  return [useHistory];\n});\n_c = GenrePage;\nvar _c;\n$RefreshReg$(_c, \"GenrePage\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","GenrePage","topGenres","setTopGenres","artists","setArtists","selectedArtist","setSelectedArtist","error","setError","artistError","setArtistError","history","fetchArtists","response","fetch","ok","Error","status","data","json","Array","isArray","rows","console","fetchTopGenresByArtist","e","preventDefault","encodeURIComponent","handleBackToMenu","push","target","value","map","artist","id","length","genre","index","genre_name","track_count"],"sources":["/Users/zhangfangce/Desktop/CIS-550/website/client/src/pages/GenrePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // For navigation\nimport \"../style/GenrePage.css\";\nimport \"../index.css\";\n\nexport default function GenrePage() {\n  const [topGenres, setTopGenres] = useState([]);\n  const [artists, setArtists] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"\"); // For the dropdown\n  const [error, setError] = useState(\"\");\n  const [artistError, setArtistError] = useState(\"\");\n  const history = useHistory(); // For navigation\n\n  // Fetch artists for the dropdown on mount\n  useEffect(() => {\n    const fetchArtists = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/artists\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch artists. Status: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // Assuming artists are in `rows`\n        if (Array.isArray(data.rows)) {\n          setArtists(data.rows);\n        } else {\n          throw new Error(\"Invalid response structure: Expected 'rows' to be an array\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching artists:\", error);\n        setError(\"Failed to load artists.\");\n      }\n    };\n\n    fetchArtists();\n  }, []);\n\n  // Fetch top genres for the selected artist\n  const fetchTopGenresByArtist = async (e) => {\n    e.preventDefault();\n    setArtistError(\"\");\n    setTopGenres([]);\n    if (!selectedArtist) {\n      setArtistError(\"Please select an artist.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        `http://localhost:8080/artists/${encodeURIComponent(selectedArtist)}/top-genres`\n      );\n      if (!response.ok) {\n        throw new Error(`Failed to fetch top genres. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setTopGenres(data.topGenres);\n    } catch (error) {\n      console.error(\"Error fetching top genres for artist:\", error);\n      setArtistError(\"Failed to load top genres for artist.\");\n    }\n  };\n\n  // Navigate back to the main menu\n  const handleBackToMenu = () => {\n    history.push(\"/\"); // Navigate back to the main menu\n  };\n\n  return (\n    <div>\n      {/* Navigation Bar */}\n      <div id=\"navbar\">\n        <ul>\n          <li><a href=\"http://localhost:3000/\">HomePage</a></li>\n          <li><a href=\"http://localhost:3000/sound\">Sound Lab</a></li>\n          <li><a href=\"http://localhost:3000/genre\">GenrePage</a></li>\n          <li><a href=\"http://localhost:3000/collaboration\">Collaboration</a></li>\n        </ul>\n      </div>\n\n      {/* Page Wrapper */}\n      <div id=\"page-wrapper\">\n        <section id=\"top-genres\">\n          <h2>🎤 Top Genres for Artist</h2>\n          <form onSubmit={fetchTopGenresByArtist}>\n            <select\n              id=\"artist-select\"\n              value={selectedArtist}\n              onChange={(e) => setSelectedArtist(e.target.value)}\n            >\n              <option value=\"\" disabled>\n                Select an Artist\n              </option>\n              {Array.isArray(artists) &&\n                artists.map((artist) => (\n                  <option key={artist.id} value={artist.artist}>\n                    {artist.artist}\n                  </option>\n                ))}\n            </select>\n\n            <div id=\"artist-form-buttons\">\n              <button type=\"submit\">Fetch Top Genres</button>\n            </div>\n          </form>\n          {artistError && <div className=\"error-message\">{artistError}</div>}\n\n          {/* Display top genres */}\n          {topGenres.length > 0 ? (\n            <ul>\n              {topGenres.map((genre, index) => (\n                <li key={index}>\n                  {genre.genre_name} ({genre.track_count} tracks)\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div className=\"loading-message\">No genres found for this artist.</div>\n          )}\n\n          {error && <div className=\"error-message\">{error}</div>}\n        </section>\n\n        {/* Back to Main Menu Button */}\n        <div id=\"back-menu-wrapper\">\n          <button id=\"back-menu-button\" onClick={handleBackToMenu}>\n            Back to Main Menu\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}