{"ast":null,"code":"var _jsxFileName = \"/Users/jp/Downloads/CIS-550/website/client/src/pages/GenrePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // For navigation\nimport \"../style/GenrePage.css\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GenrePage() {\n  _s();\n  const [topGenres, setTopGenres] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"\"); // For artist input\n  const [randomSongs, setRandomSongs] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\"); // For genre dropdown\n  const [numSongs, setNumSongs] = useState(\"\"); // For number of songs\n  const [genres, setGenres] = useState([]); // List of genres for dropdown\n  const [artistError, setArtistError] = useState(\"\");\n  const [genreError, setGenreError] = useState(\"\");\n  const [genreTracks, setGenreTracks] = useState([]); // Tracks for clicked genre\n  const [clickedGenre, setClickedGenre] = useState(\"\"); // Name of clicked genre\n  const history = useHistory(); // For navigation\n\n  // Fetch genres for the dropdown on mount\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/genres\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch genres. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setGenres(data.rows); // Assuming genres are in `rows`\n      } catch (error) {\n        console.error(\"Error fetching genres:\", error);\n        setGenreError(\"Failed to load genres.\");\n      }\n    };\n    fetchGenres();\n  }, []);\n\n  // Fetch top genres for the artist entered by the user\n  const fetchTopGenresByArtist = async e => {\n    e.preventDefault();\n    setArtistError(\"\");\n    setTopGenres([]);\n    if (!selectedArtist.trim()) {\n      setArtistError(\"Please enter an artist name.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/artists/${encodeURIComponent(selectedArtist)}/top-genres`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch top genres. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setTopGenres(data.rows); // Use data.rows if the genres are inside rows\n    } catch (error) {\n      console.error(\"Error fetching top genres for artist:\", error);\n      setArtistError(\"Failed to load top genres for artist.\");\n    }\n  };\n\n  // Fetch tracks for clicked genre\n  const fetchTracksForGenre = async genreName => {\n    setClickedGenre(genreName);\n    setGenreTracks([]);\n    try {\n      const response = await fetch(`http://localhost:8080/artists/${encodeURIComponent(selectedArtist)}/genres/${encodeURIComponent(genreName)}/tracks`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch tracks for genre. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setGenreTracks(data.rows);\n    } catch (error) {\n      console.error(\"Error fetching tracks for genre:\", error);\n      setGenreError(\"Failed to load tracks for genre.\");\n    }\n  };\n\n  // Fetch random songs for Genre of the Day\n  const fetchRandomSongs = async e => {\n    e.preventDefault();\n    setGenreError(\"\");\n    setRandomSongs([]);\n    if (!selectedGenre.trim()) {\n      setGenreError(\"Please select a genre.\");\n      return;\n    }\n    if (!numSongs || isNaN(numSongs) || numSongs > 10 || numSongs < 1) {\n      setGenreError(\"Please enter a valid number of songs (1-10).\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/random-songs?genreName=${encodeURIComponent(selectedGenre)}&numSongs=${numSongs}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch random songs. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setRandomSongs(data.rows);\n    } catch (error) {\n      console.error(\"Error fetching random songs:\", error);\n      setGenreError(\"Failed to load songs for the selected genre.\");\n    }\n  };\n\n  // Navigate back to the main menu\n  const handleBackToMenu = () => {\n    history.push(\"/\"); // Navigate back to the main menu\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/\",\n            children: \"HomePage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/sound\",\n            children: \"Sound Lab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/search\",\n            children: \"Track Finder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/collaboration\",\n            children: \"Collaboration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"page-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"top-genres\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDFA4 Top Genres for Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: fetchTopGenresByArtist,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"artist-input\",\n            value: selectedArtist,\n            onChange: e => setSelectedArtist(e.target.value),\n            placeholder: \"Enter artist name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"artist-form-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Fetch Top Genres\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), artistError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: artistError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 27\n        }, this), topGenres.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: topGenres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              cursor: \"pointer\",\n              color: \"blue\"\n            },\n            onClick: () => fetchTracksForGenre(genre.genre_name),\n            children: [genre.genre_name, \" (\", genre.track_count, \" tracks)\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-message\",\n          children: \"No genres found for this artist.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), genreTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"genre-tracks\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Tracks for Genre: \", clickedGenre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: genreTracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `http://${track.track_url}`,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: track.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"genre-of-the-day\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"\\uD83C\\uDFB6 Genre of the Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"genre-form\",\n          onSubmit: fetchRandomSongs,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genre-form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"genre-select\",\n              value: selectedGenre,\n              onChange: e => setSelectedGenre(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select a Genre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 9\n              }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: genre.genre,\n                children: genre.genre\n              }, genre.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 11\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genre-form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"num-songs-input\",\n              value: numSongs,\n              onChange: e => setNumSongs(e.target.value),\n              placeholder: \"Number of Songs (max 10)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"fetch-songs-button\",\n            children: \"Fetch Songs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 3\n        }, this), genreError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: genreError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 18\n        }, this), randomSongs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"random-songs-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"random-songs-message\",\n            children: \"\\uD83C\\uDFB5 These are your songs for today! You can go to Track Finder to listen to them!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"song-list\",\n            children: randomSongs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"song-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `http://${song.track_url}`,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"song-link\",\n                children: song.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 13\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"back-menu-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"back-menu-button\",\n          onClick: handleBackToMenu,\n          children: \"Back to Main Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(GenrePage, \"L2skbLO5liq4I2dnzK6zMvteJGA=\", false, function () {\n  return [useHistory];\n});\n_c = GenrePage;\nvar _c;\n$RefreshReg$(_c, \"GenrePage\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","GenrePage","topGenres","setTopGenres","selectedArtist","setSelectedArtist","randomSongs","setRandomSongs","selectedGenre","setSelectedGenre","numSongs","setNumSongs","genres","setGenres","artistError","setArtistError","genreError","setGenreError","genreTracks","setGenreTracks","clickedGenre","setClickedGenre","history","fetchGenres","response","fetch","ok","Error","status","data","json","rows","error","console","fetchTopGenresByArtist","e","preventDefault","trim","encodeURIComponent","fetchTracksForGenre","genreName","fetchRandomSongs","isNaN","handleBackToMenu","push","target","value","length","map","genre","index","cursor","color","genre_name","track_count","track","track_url","title","id","song"],"sources":["/Users/jp/Downloads/CIS-550/website/client/src/pages/GenrePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // For navigation\nimport \"../style/GenrePage.css\";\nimport \"../index.css\";\n\nexport default function GenrePage() {\n  const [topGenres, setTopGenres] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"\"); // For artist input\n  const [randomSongs, setRandomSongs] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\"); // For genre dropdown\n  const [numSongs, setNumSongs] = useState(\"\"); // For number of songs\n  const [genres, setGenres] = useState([]); // List of genres for dropdown\n  const [artistError, setArtistError] = useState(\"\");\n  const [genreError, setGenreError] = useState(\"\");\n  const [genreTracks, setGenreTracks] = useState([]); // Tracks for clicked genre\n  const [clickedGenre, setClickedGenre] = useState(\"\"); // Name of clicked genre\n  const history = useHistory(); // For navigation\n\n  // Fetch genres for the dropdown on mount\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/genres\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch genres. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setGenres(data.rows); // Assuming genres are in `rows`\n      } catch (error) {\n        console.error(\"Error fetching genres:\", error);\n        setGenreError(\"Failed to load genres.\");\n      }\n    };\n\n    fetchGenres();\n  }, []);\n\n  // Fetch top genres for the artist entered by the user\n  const fetchTopGenresByArtist = async (e) => {\n    e.preventDefault();\n    setArtistError(\"\");\n    setTopGenres([]);\n    if (!selectedArtist.trim()) {\n      setArtistError(\"Please enter an artist name.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        `http://localhost:8080/artists/${encodeURIComponent(selectedArtist)}/top-genres`\n      );\n      if (!response.ok) {\n        throw new Error(`Failed to fetch top genres. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setTopGenres(data.rows); // Use data.rows if the genres are inside rows\n    } catch (error) {\n      console.error(\"Error fetching top genres for artist:\", error);\n      setArtistError(\"Failed to load top genres for artist.\");\n    }\n  };\n\n  // Fetch tracks for clicked genre\n  const fetchTracksForGenre = async (genreName) => {\n    setClickedGenre(genreName);\n    setGenreTracks([]);\n    try {\n      const response = await fetch(\n        `http://localhost:8080/artists/${encodeURIComponent(selectedArtist)}/genres/${encodeURIComponent(genreName)}/tracks`\n      );\n      if (!response.ok) {\n        throw new Error(`Failed to fetch tracks for genre. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setGenreTracks(data.rows);\n    } catch (error) {\n      console.error(\"Error fetching tracks for genre:\", error);\n      setGenreError(\"Failed to load tracks for genre.\");\n    }\n  };\n\n  // Fetch random songs for Genre of the Day\n  const fetchRandomSongs = async (e) => {\n    e.preventDefault();\n    setGenreError(\"\");\n    setRandomSongs([]);\n    if (!selectedGenre.trim()) {\n      setGenreError(\"Please select a genre.\");\n      return;\n    }\n    if (!numSongs || isNaN(numSongs) || numSongs > 10 || numSongs < 1) {\n      setGenreError(\"Please enter a valid number of songs (1-10).\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        `http://localhost:8080/random-songs?genreName=${encodeURIComponent(selectedGenre)}&numSongs=${numSongs}`\n      );\n      if (!response.ok) {\n        throw new Error(`Failed to fetch random songs. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setRandomSongs(data.rows);\n    } catch (error) {\n      console.error(\"Error fetching random songs:\", error);\n      setGenreError(\"Failed to load songs for the selected genre.\");\n    }\n  };\n\n  // Navigate back to the main menu\n  const handleBackToMenu = () => {\n    history.push(\"/\"); // Navigate back to the main menu\n  };\n\n  return (\n    <div>\n      {/* Navigation Bar */}\n      <div id=\"navbar\">\n        <ul>\n          <li><a href=\"http://localhost:3000/\">HomePage</a></li>\n          <li><a href=\"http://localhost:3000/sound\">Sound Lab</a></li>\n          <li><a href=\"http://localhost:3000/search\">Track Finder</a ></li>\n          <li><a href=\"http://localhost:3000/collaboration\">Collaboration</a></li>\n        </ul>\n      </div>\n\n      {/* Page Wrapper */}\n      <div id=\"page-wrapper\">\n        <section id=\"top-genres\">\n          <h2>🎤 Top Genres for Artist</h2>\n\n          <form onSubmit={fetchTopGenresByArtist}>\n            <input \n              type=\"text\" \n              id=\"artist-input\" \n              value={selectedArtist} \n              onChange={(e) => setSelectedArtist(e.target.value)} \n              placeholder=\"Enter artist name\" \n            />\n            <div id=\"artist-form-buttons\">\n              <button type=\"submit\">Fetch Top Genres</button>\n            </div>\n          </form>\n\n          {/* Display Artist Error Message */}\n          {artistError && <div className=\"error-message\">{artistError}</div>}\n\n          {/* Display top genres */}\n          {topGenres.length > 0 ? (\n            <ul>\n              {topGenres.map((genre, index) => (\n                <li\n                  key={index}\n                  style={{ cursor: \"pointer\", color: \"blue\" }}\n                  onClick={() => fetchTracksForGenre(genre.genre_name)}\n                >\n                  {genre.genre_name} ({genre.track_count} tracks)\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div className=\"loading-message\">No genres found for this artist.</div>\n          )}\n\n          {/* Display Tracks for Selected Genre */}\n          {genreTracks.length > 0 && (\n            <section id=\"genre-tracks\">\n              <h3>Tracks for Genre: {clickedGenre}</h3>\n              <ul>\n                {genreTracks.map((track, index) => (\n                  <li key={index}>\n                    <a\n                      href={`http://${track.track_url}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {track.title}\n                    </a>\n                  </li>\n                ))}\n              </ul>\n            </section>\n          )}\n        </section>\n{/* Genre of the Day */}\n<section id=\"genre-of-the-day\">\n  <h2 className=\"section-title\">🎶 Genre of the Day</h2>\n  <form className=\"genre-form\" onSubmit={fetchRandomSongs}>\n    <div className=\"genre-form-group\">\n      <select\n        id=\"genre-select\"\n        value={selectedGenre}\n        onChange={(e) => setSelectedGenre(e.target.value)}\n      >\n        <option value=\"\" disabled>\n          Select a Genre\n        </option>\n        {genres.map((genre) => (\n          <option key={genre.id} value={genre.genre}>\n            {genre.genre}\n          </option>\n        ))}\n      </select>\n    </div>\n    <div className=\"genre-form-group\">\n      <input\n        type=\"number\"\n        id=\"num-songs-input\"\n        value={numSongs}\n        onChange={(e) => setNumSongs(e.target.value)}\n        placeholder=\"Number of Songs (max 10)\"\n      />\n    </div>\n    <button type=\"submit\" className=\"fetch-songs-button\">\n      Fetch Songs\n    </button>\n  </form>\n  {genreError && <div className=\"error-message\">{genreError}</div>}\n  {randomSongs.length > 0 && (\n    <div id=\"random-songs-list\">\n      <p className=\"random-songs-message\">\n        🎵 These are your songs for today! You can go to Track Finder to listen to them!\n      </p>\n      <ul className=\"song-list\">\n        {randomSongs.map((song, index) => (\n          <li key={index} className=\"song-item\">\n            <a\n              href={`http://${song.track_url}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"song-link\"\n            >\n              {song.title}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )}\n</section>\n\n        {/* Back to Main Menu */}\n        <div id=\"back-menu-wrapper\">\n          <button id=\"back-menu-button\" onClick={handleBackToMenu}>\n            Back to Main Menu\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}