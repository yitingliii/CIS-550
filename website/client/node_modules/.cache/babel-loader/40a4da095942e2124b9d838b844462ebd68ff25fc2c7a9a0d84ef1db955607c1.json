{"ast":null,"code":"var _jsxFileName = \"/Users/zhangfangce/Desktop/CIS-550/website/client/src/pages/GenrePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // For navigation\nimport \"../style/GenrePage.css\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GenrePage() {\n  _s();\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\"); // For genre dropdown\n  const [numSongs, setNumSongs] = useState(\"\"); // For number of songs\n  const [randomSongs, setRandomSongs] = useState([]);\n  const [topGenres, setTopGenres] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"\"); // For artist input\n  const [error, setError] = useState(\"\");\n  const [genreError, setGenreError] = useState(\"\");\n  const history = useHistory(); // For navigation\n\n  // Fetch genres for the dropdown\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/genres\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch genres. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setGenres(data.rows); // Assuming genres are in `rows`\n      } catch (error) {\n        console.error(\"Error fetching genres:\", error);\n        setError(\"Failed to load genres.\");\n      }\n    };\n    fetchGenres();\n  }, []);\n\n  // Fetch random songs for the selected genre and number of songs\n  const fetchRandomSongs = async e => {\n    e.preventDefault();\n    setGenreError(\"\");\n    setRandomSongs([]);\n    if (!selectedGenre.trim()) {\n      setGenreError(\"Please select a genre.\");\n      return;\n    }\n    if (!numSongs || isNaN(numSongs) || numSongs > 10) {\n      setGenreError(\"Please enter a valid number of songs (1-10).\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/random-songs?genreName=${encodeURIComponent(selectedGenre)}&numSongs=${numSongs}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch random songs. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setRandomSongs(data);\n    } catch (error) {\n      console.error(\"Error fetching random songs:\", error);\n      setGenreError(\"Failed to load songs for the selected genre.\");\n    }\n  };\n\n  // Navigate back to the main menu\n  const handleBackToMenu = () => {\n    history.push(\"/\"); // Navigate back to the main menu\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/\",\n            children: \"HomePage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/sound\",\n            children: \"Sound Lab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/genre\",\n            children: \"GenrePage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/collaboration\",\n            children: \"Collaboration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"page-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"genre-of-the-day\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDFB6 Genre of the Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: fetchRandomSongs,\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"genre-select\",\n            value: selectedGenre,\n            onChange: e => setSelectedGenre(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select a Genre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), Array.isArray(genres) && genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: genre.genre,\n              children: genre.genre\n            }, genre.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"num-songs-input\",\n            value: numSongs,\n            onChange: e => setNumSongs(e.target.value),\n            placeholder: \"Number of Songs (max 10)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"genre-form-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Fetch Songs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), genreError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: genreError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 26\n        }, this), randomSongs.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: randomSongs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [song.title, \" (Track ID: \", song.track_id, \")\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-message\",\n          children: \"No songs found for this genre.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"back-menu-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"back-menu-button\",\n          onClick: handleBackToMenu,\n          children: \"Back to Main Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(GenrePage, \"TyGD40RM/cUzDAkcEYosJ6lVNec=\", false, function () {\n  return [useHistory];\n});\n_c = GenrePage;\nvar _c;\n$RefreshReg$(_c, \"GenrePage\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","GenrePage","genres","setGenres","selectedGenre","setSelectedGenre","numSongs","setNumSongs","randomSongs","setRandomSongs","topGenres","setTopGenres","selectedArtist","setSelectedArtist","error","setError","genreError","setGenreError","history","fetchGenres","response","fetch","ok","Error","status","data","json","rows","console","fetchRandomSongs","e","preventDefault","trim","isNaN","encodeURIComponent","handleBackToMenu","push","target","value","Array","isArray","map","genre","id","length","song","index","title","track_id"],"sources":["/Users/zhangfangce/Desktop/CIS-550/website/client/src/pages/GenrePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // For navigation\nimport \"../style/GenrePage.css\";\nimport \"../index.css\";\n\nexport default function GenrePage() {\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\"); // For genre dropdown\n  const [numSongs, setNumSongs] = useState(\"\"); // For number of songs\n  const [randomSongs, setRandomSongs] = useState([]);\n  const [topGenres, setTopGenres] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"\"); // For artist input\n  const [error, setError] = useState(\"\");\n  const [genreError, setGenreError] = useState(\"\");\n  const history = useHistory(); // For navigation\n\n  // Fetch genres for the dropdown\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/genres\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch genres. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setGenres(data.rows); // Assuming genres are in `rows`\n      } catch (error) {\n        console.error(\"Error fetching genres:\", error);\n        setError(\"Failed to load genres.\");\n      }\n    };\n\n    fetchGenres();\n  }, []);\n\n  // Fetch random songs for the selected genre and number of songs\n  const fetchRandomSongs = async (e) => {\n    e.preventDefault();\n    setGenreError(\"\");\n    setRandomSongs([]);\n    if (!selectedGenre.trim()) {\n      setGenreError(\"Please select a genre.\");\n      return;\n    }\n    if (!numSongs || isNaN(numSongs) || numSongs > 10) {\n      setGenreError(\"Please enter a valid number of songs (1-10).\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        `http://localhost:8080/random-songs?genreName=${encodeURIComponent(selectedGenre)}&numSongs=${numSongs}`\n      );\n      if (!response.ok) {\n        throw new Error(`Failed to fetch random songs. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setRandomSongs(data);\n    } catch (error) {\n      console.error(\"Error fetching random songs:\", error);\n      setGenreError(\"Failed to load songs for the selected genre.\");\n    }\n  };\n\n  // Navigate back to the main menu\n  const handleBackToMenu = () => {\n    history.push(\"/\"); // Navigate back to the main menu\n  };\n\n  return (\n    <div>\n      {/* Navigation Bar */}\n      <div id=\"navbar\">\n        <ul>\n          <li><a href=\"http://localhost:3000/\">HomePage</a></li>\n          <li><a href=\"http://localhost:3000/sound\">Sound Lab</a></li>\n          <li><a href=\"http://localhost:3000/genre\">GenrePage</a></li>\n          <li><a href=\"http://localhost:3000/collaboration\">Collaboration</a></li>\n        </ul>\n      </div>\n\n      {/* Page Wrapper */}\n      <div id=\"page-wrapper\">\n        <section id=\"genre-of-the-day\">\n          <h2>🎶 Genre of the Day</h2>\n          <form onSubmit={fetchRandomSongs}>\n            <select\n              id=\"genre-select\"\n              value={selectedGenre}\n              onChange={(e) => setSelectedGenre(e.target.value)}\n            >\n              <option value=\"\" disabled>\n                Select a Genre\n              </option>\n              {Array.isArray(genres) &&\n                genres.map((genre) => (\n                  <option key={genre.id} value={genre.genre}>\n                    {genre.genre}\n                  </option>\n                ))}\n            </select>\n\n            <input\n              type=\"number\"\n              id=\"num-songs-input\"\n              value={numSongs}\n              onChange={(e) => setNumSongs(e.target.value)}\n              placeholder=\"Number of Songs (max 10)\"\n            />\n\n            <div id=\"genre-form-buttons\">\n              <button type=\"submit\">Fetch Songs</button>\n            </div>\n          </form>\n\n          {/* Display Genre Error Message */}\n          {genreError && <div className=\"error-message\">{genreError}</div>}\n\n          {/* Display random songs */}\n          {randomSongs.length > 0 ? (\n            <ul>\n              {randomSongs.map((song, index) => (\n                <li key={index}>\n                  {song.title} (Track ID: {song.track_id})\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div className=\"loading-message\">No songs found for this genre.</div>\n          )}\n        </section>\n\n        {/* Back to Main Menu Button */}\n        <div id=\"back-menu-wrapper\">\n          <button id=\"back-menu-button\" onClick={handleBackToMenu}>\n            Back to Main Menu\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}