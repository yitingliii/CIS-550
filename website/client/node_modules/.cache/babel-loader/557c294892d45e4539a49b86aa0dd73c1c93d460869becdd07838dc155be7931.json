{"ast":null,"code":"var _jsxFileName = \"/Users/zhangfangce/Desktop/CIS-550/website/client/src/pages/GenrePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../style/GenrePage.css\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GenrePage() {\n  _s();\n  const [topGenres, setTopGenres] = useState([]);\n  const [artists, setArtists] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"\"); // Dropdown for artist name\n  const [error, setError] = useState(\"\");\n\n  // Function to fetch artists for the dropdown\n  const fetchGenres = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/genres\");\n      if (!response.ok) {\n        throw new Error(`Failed to fetch genres. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setGenres(data.rows); // Assuming genres are in `rows`\n    } catch (error) {\n      console.error(\"Error fetching genres:\", error);\n      setGenreError(\"Failed to load genres.\");\n    }\n  };\n\n  // Function to fetch top genres for a specific artist\n  const fetchTopGenresByArtist = async () => {\n    if (!selectedArtist) {\n      setError(\"Please select an artist.\");\n      return;\n    }\n    setError(\"\");\n    try {\n      const response = await fetch(`http://localhost:8080/artists/${encodeURIComponent(selectedArtist)}/top-genres`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch top genres. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setTopGenres(data);\n    } catch (error) {\n      console.error(\"Error fetching top genres for artist:\", error);\n      setError(\"Failed to load top genres for artist.\");\n    }\n  };\n\n  // Fetch artists on initial page load\n  useEffect(() => {\n    fetchArtists();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main_content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"top_genres\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFA4 Top Genres for Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"artist-select\",\n        value: selectedArtist,\n        onChange: e => setSelectedArtist(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select an Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), Array.isArray(artists) && artists.map(artist => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: artist.Artist,\n          children: artist.Artist\n        }, artist.ID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchTopGenresByArtist,\n        children: \"Fetch Top Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), topGenres.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: topGenres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [genre.genre_name, \" (\", genre.track_count, \" tracks)\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-message\",\n        children: \"No genres found for this artist.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(GenrePage, \"vxo8hMTM1XbDYJFDhrtuZJ9CmuY=\");\n_c = GenrePage;\nvar _c;\n$RefreshReg$(_c, \"GenrePage\");","map":{"version":3,"names":["React","useState","useEffect","GenrePage","topGenres","setTopGenres","artists","setArtists","selectedArtist","setSelectedArtist","error","setError","fetchGenres","response","fetch","ok","Error","status","data","json","setGenres","rows","console","setGenreError","fetchTopGenresByArtist","encodeURIComponent","fetchArtists","e","target","value","Array","isArray","map","artist","Artist","ID","length","genre","index","genre_name","track_count"],"sources":["/Users/zhangfangce/Desktop/CIS-550/website/client/src/pages/GenrePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../style/GenrePage.css\";\nimport \"../index.css\";\n\nexport default function GenrePage() {\n  const [topGenres, setTopGenres] = useState([]);\n  const [artists, setArtists] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"\"); // Dropdown for artist name\n  const [error, setError] = useState(\"\");\n\n  // Function to fetch artists for the dropdown\n  const fetchGenres = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/genres\");\n      if (!response.ok) {\n        throw new Error(`Failed to fetch genres. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setGenres(data.rows); // Assuming genres are in `rows`\n    } catch (error) {\n      console.error(\"Error fetching genres:\", error);\n      setGenreError(\"Failed to load genres.\");\n    }\n  };\n  \n  // Function to fetch top genres for a specific artist\n  const fetchTopGenresByArtist = async () => {\n    if (!selectedArtist) {\n      setError(\"Please select an artist.\");\n      return;\n    }\n    setError(\"\");\n    try {\n      const response = await fetch(\n        `http://localhost:8080/artists/${encodeURIComponent(selectedArtist)}/top-genres`\n      );\n      if (!response.ok) {\n        throw new Error(`Failed to fetch top genres. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setTopGenres(data);\n    } catch (error) {\n      console.error(\"Error fetching top genres for artist:\", error);\n      setError(\"Failed to load top genres for artist.\");\n    }\n  };\n\n  // Fetch artists on initial page load\n  useEffect(() => {\n    fetchArtists();\n  }, []);\n\n  return (\n    <div id=\"main_content\">\n      {/* Fetch Top Genres for a Specific Artist */}\n      <div id=\"top_genres\">\n        <h2>ðŸŽ¤ Top Genres for Artist</h2>\n\n        <select\n          id=\"artist-select\"\n          value={selectedArtist}\n          onChange={(e) => setSelectedArtist(e.target.value)}\n        >\n          <option value=\"\" disabled>\n            Select an Artist\n          </option>\n          {Array.isArray(artists) &&\n            artists.map((artist) => (\n              <option key={artist.ID} value={artist.Artist}>\n                {artist.Artist}\n              </option>\n            ))}\n        </select>\n\n        <button onClick={fetchTopGenresByArtist}>Fetch Top Genres</button>\n\n        {topGenres.length > 0 ? (\n          <ul>\n            {topGenres.map((genre, index) => (\n              <li key={index}>\n                {genre.genre_name} ({genre.track_count} tracks)\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"loading-message\">No genres found for this artist.</div>\n        )}\n\n        {error && <div className=\"error-message\">{error}</div>}\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}