{"ast":null,"code":"var _jsxFileName = \"/Users/jp/Downloads/CIS-550/website/client/src/pages/SoundPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../style/SoundPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MusicInsights() {\n  _s();\n  const [danceabilityRows, setDanceabilityRows] = useState([]);\n  const [energyRows, setEnergyRows] = useState([]);\n  const [filteredEnergyRows, setFilteredEnergyRows] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"All\");\n  const [topN, setTopN] = useState(5);\n  const [audioProfilesRows, setAudioProfilesRows] = useState([]);\n  const [moodRows, setMoodRows] = useState([]);\n  const [filteredMoodRows, setFilteredMoodRows] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [selectedMood, setSelectedMood] = useState(\"All\");\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    fetchDanceabilityData();\n    fetchEnergyData();\n    fetchAudioProfilesData();\n    fetchSongsByMood();\n  }, []);\n\n  // Fetch danceability data\n  const fetchDanceabilityData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/tracks/above-average-danceability\");\n      if (!response.ok) throw new Error(`Failed to fetch danceability data. Status: ${response.status}`);\n      const data = await response.json();\n      const randomRows = data.rows.sort(() => 0.5 - Math.random()).slice(0, 5);\n      setDanceabilityRows(randomRows);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load danceability data.\");\n    }\n  };\n\n  // Fetch energy data and genres\n  const fetchEnergyData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/tracks/rank-by-energy\");\n      if (!response.ok) throw new Error(`Failed to fetch energy data. Status: ${response.status}`);\n      const data = await response.json();\n      setEnergyRows(data.rows || []);\n      setFilteredEnergyRows(applyFilters(data.rows || [], selectedGenre, topN));\n      const uniqueGenres = Array.from(new Set(data.rows.map(row => row.genre_name)));\n      setGenres([\"All\", ...uniqueGenres]);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load energy data.\");\n    }\n  };\n\n  // Fetch audio profiles data\n  const fetchAudioProfilesData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/audio-feature-profiles\");\n      if (!response.ok) throw new Error(`Failed to fetch audio profiles data. Status: ${response.status}`);\n      const data = await response.json();\n      setAudioProfilesRows(data.rows || []);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load audio profiles data.\");\n    }\n  };\n\n  // Fetch songs by mood\n  const fetchSongsByMood = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/songs/mood\");\n      if (!response.ok) throw new Error(`Failed to fetch songs by mood. Status: ${response.status}`);\n      const data = await response.json();\n      setMoodRows(data || []);\n      setFilteredMoodRows(data || []);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load songs by mood.\");\n    }\n  };\n\n  // Handle genre selection\n  const handleGenreChange = event => {\n    const genre = event.target.value;\n    setSelectedGenre(genre);\n    setFilteredEnergyRows(applyFilters(energyRows, genre, topN));\n  };\n\n  // Handle top-N selection\n  const handleTopNChange = event => {\n    const n = parseInt(event.target.value, 10);\n    setTopN(n);\n    setFilteredEnergyRows(applyFilters(energyRows, selectedGenre, n));\n  };\n\n  // Apply filters based on genre and top-N\n  const applyFilters = (rows, genre, n) => {\n    let filtered = rows;\n    if (genre !== \"All\") {\n      filtered = rows.filter(row => row.genre_name === genre);\n    }\n    return filtered.sort((a, b) => b.energy - a.energy).slice(0, n);\n  };\n\n  // Pagination logic for Mood Table\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const paginatedRows = filteredMoodRows.slice(indexOfFirstRow, indexOfLastRow);\n  const totalPages = Math.ceil(filteredMoodRows.length / rowsPerPage);\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(prevPage => prevPage - 1);\n    }\n  };\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(prevPage => prevPage + 1);\n    }\n  };\n  const handleMoodChange = event => {\n    const mood = event.target.value;\n    setSelectedMood(mood);\n    setCurrentPage(1);\n    if (mood === \"All\") {\n      setFilteredMoodRows(moodRows);\n    } else {\n      const filtered = moodRows.filter(row => row.mood === mood);\n      setFilteredMoodRows(filtered);\n    }\n  };\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1);\n  };\n\n  // New feature states and logic\n  const [instrumentalness, setInstrumentalness] = useState(0);\n  const [energyFeature, setEnergyFeature] = useState(0);\n  const [valence, setValence] = useState(0);\n  const [liveness, setLiveness] = useState(0);\n  const [acousticness, setAcousticness] = useState(0);\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const fetchSongs = async () => {\n    try {\n      setLoading(true);\n      setError(\"\"); // Clear any previous errors\n\n      const queryParams = new URLSearchParams({\n        instrumentalness: instrumentalness > 0 ? instrumentalness : undefined,\n        energy: energyFeature > 0 ? energyFeature : undefined,\n        valence: valence > 0 ? valence : undefined,\n        liveness: liveness > 0 ? liveness : undefined,\n        acousticness: acousticness > 0 ? acousticness : undefined\n      });\n      const response = await fetch(`http://localhost:8080/songs-by-audio-features?${queryParams}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch songs. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.rows && data.rows.length > 0) {\n        setSongs(data.rows); // Use the `rows` property directly\n      } else {\n        setSongs([]); // Clear results if no rows found\n        setError(\"No songs found matching the specified criteria.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to fetch songs. Please try again later.\");\n    } finally {\n      setLoading(false); // Stop loading state\n    }\n  };\n\n  const clearFilters = () => {\n    setInstrumentalness(0);\n    setEnergyFeature(0);\n    setValence(0);\n    setLiveness(0);\n    setAcousticness(0);\n    setSongs([]);\n    setError(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sound-page-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Filter Songs by Audio Features\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Use the sliders below to filter songs based on their audio feature values.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          gap: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1 1 200px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"instrumentalness\",\n            children: [\"Instrumentalness: \", instrumentalness]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"instrumentalness\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: instrumentalness,\n            onChange: e => setInstrumentalness(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1 1 200px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"energy\",\n            children: [\"Energy: \", energyFeature]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"energy\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: energyFeature,\n            onChange: e => setEnergyFeature(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1 1 200px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"valence\",\n            children: [\"Valence: \", valence]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"valence\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: valence,\n            onChange: e => setValence(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1 1 200px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"liveness\",\n            children: [\"Liveness: \", liveness]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"liveness\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: liveness,\n            onChange: e => setLiveness(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1 1 200px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"acousticness\",\n            children: [\"Acousticness: \", acousticness]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"acousticness\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: acousticness,\n            onChange: e => setAcousticness(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"20px 0\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchSongs,\n          style: {\n            marginRight: \"10px\"\n          },\n          children: loading ? \"Loading...\" : \"Search Songs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearFilters,\n          disabled: loading,\n          children: \"Clear Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontWeight: \"bold\"\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this) : songs.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Instrumentalness\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Energy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Valence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Liveness\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Acousticness\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"URL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: songs.map((song, index) => {\n              var _song$instrumentalnes, _song$energy, _song$valence, _song$liveness, _song$acousticness;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: song.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_song$instrumentalnes = song.instrumentalness) === null || _song$instrumentalnes === void 0 ? void 0 : _song$instrumentalnes.toFixed(3)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_song$energy = song.energy) === null || _song$energy === void 0 ? void 0 : _song$energy.toFixed(3)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_song$valence = song.valence) === null || _song$valence === void 0 ? void 0 : _song$valence.toFixed(3)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_song$liveness = song.liveness) === null || _song$liveness === void 0 ? void 0 : _song$liveness.toFixed(3)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_song$acousticness = song.acousticness) === null || _song$acousticness === void 0 ? void 0 : _song$acousticness.toFixed(3)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: song.url ? /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: song.url,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: \"Listen\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 25\n                  }, this) : \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this) : !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No songs to display. Adjust your filters and try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MusicInsights, \"Fu7xMKHT4ZG4RpkdlPr2C7tOrqI=\");\n_c = MusicInsights;\nvar _c;\n$RefreshReg$(_c, \"MusicInsights\");","map":{"version":3,"names":["React","useState","useEffect","MusicInsights","danceabilityRows","setDanceabilityRows","energyRows","setEnergyRows","filteredEnergyRows","setFilteredEnergyRows","genres","setGenres","selectedGenre","setSelectedGenre","topN","setTopN","audioProfilesRows","setAudioProfilesRows","moodRows","setMoodRows","filteredMoodRows","setFilteredMoodRows","error","setError","selectedMood","setSelectedMood","rowsPerPage","setRowsPerPage","currentPage","setCurrentPage","fetchDanceabilityData","fetchEnergyData","fetchAudioProfilesData","fetchSongsByMood","response","fetch","ok","Error","status","data","json","randomRows","rows","sort","Math","random","slice","err","console","applyFilters","uniqueGenres","Array","from","Set","map","row","genre_name","handleGenreChange","event","genre","target","value","handleTopNChange","n","parseInt","filtered","filter","a","b","energy","indexOfLastRow","indexOfFirstRow","paginatedRows","totalPages","ceil","length","handlePreviousPage","prevPage","handleNextPage","handleMoodChange","mood","handleRowsPerPageChange","instrumentalness","setInstrumentalness","energyFeature","setEnergyFeature","valence","setValence","liveness","setLiveness","acousticness","setAcousticness","songs","setSongs","loading","setLoading","fetchSongs","queryParams","URLSearchParams","undefined","clearFilters","display","flexWrap","gap","flex","e","parseFloat","margin","textAlign","marginRight","color","fontWeight","song","index","title","toFixed","url"],"sources":["/Users/jp/Downloads/CIS-550/website/client/src/pages/SoundPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../style/SoundPage.css';\n\nexport default function MusicInsights() {\n  const [danceabilityRows, setDanceabilityRows] = useState([]);\n  const [energyRows, setEnergyRows] = useState([]);\n  const [filteredEnergyRows, setFilteredEnergyRows] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"All\");\n  const [topN, setTopN] = useState(5);\n  const [audioProfilesRows, setAudioProfilesRows] = useState([]);\n  const [moodRows, setMoodRows] = useState([]);\n  const [filteredMoodRows, setFilteredMoodRows] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [selectedMood, setSelectedMood] = useState(\"All\");\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    fetchDanceabilityData();\n    fetchEnergyData();\n    fetchAudioProfilesData();\n    fetchSongsByMood();\n  }, []);\n\n  // Fetch danceability data\n  const fetchDanceabilityData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/tracks/above-average-danceability\");\n      if (!response.ok) throw new Error(`Failed to fetch danceability data. Status: ${response.status}`);\n      const data = await response.json();\n\n      const randomRows = data.rows.sort(() => 0.5 - Math.random()).slice(0, 5);\n      setDanceabilityRows(randomRows);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load danceability data.\");\n    }\n  };\n\n  // Fetch energy data and genres\n  const fetchEnergyData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/tracks/rank-by-energy\");\n      if (!response.ok) throw new Error(`Failed to fetch energy data. Status: ${response.status}`);\n      const data = await response.json();\n\n      setEnergyRows(data.rows || []);\n      setFilteredEnergyRows(applyFilters(data.rows || [], selectedGenre, topN));\n\n      const uniqueGenres = Array.from(new Set(data.rows.map((row) => row.genre_name)));\n      setGenres([\"All\", ...uniqueGenres]);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load energy data.\");\n    }\n  };\n\n  // Fetch audio profiles data\n  const fetchAudioProfilesData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/audio-feature-profiles\");\n      if (!response.ok) throw new Error(`Failed to fetch audio profiles data. Status: ${response.status}`);\n      const data = await response.json();\n      setAudioProfilesRows(data.rows || []);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load audio profiles data.\");\n    }\n  };\n\n  // Fetch songs by mood\n  const fetchSongsByMood = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/songs/mood\");\n      if (!response.ok) throw new Error(`Failed to fetch songs by mood. Status: ${response.status}`);\n      const data = await response.json();\n      setMoodRows(data || []);\n      setFilteredMoodRows(data || []);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load songs by mood.\");\n    }\n  };\n\n  // Handle genre selection\n  const handleGenreChange = (event) => {\n    const genre = event.target.value;\n    setSelectedGenre(genre);\n    setFilteredEnergyRows(applyFilters(energyRows, genre, topN));\n  };\n\n  // Handle top-N selection\n  const handleTopNChange = (event) => {\n    const n = parseInt(event.target.value, 10);\n    setTopN(n);\n    setFilteredEnergyRows(applyFilters(energyRows, selectedGenre, n));\n  };\n\n  // Apply filters based on genre and top-N\n  const applyFilters = (rows, genre, n) => {\n    let filtered = rows;\n\n    if (genre !== \"All\") {\n      filtered = rows.filter((row) => row.genre_name === genre);\n    }\n\n    return filtered.sort((a, b) => b.energy - a.energy).slice(0, n);\n  };\n\n  // Pagination logic for Mood Table\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const paginatedRows = filteredMoodRows.slice(indexOfFirstRow, indexOfLastRow);\n\n  const totalPages = Math.ceil(filteredMoodRows.length / rowsPerPage);\n\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage((prevPage) => prevPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage((prevPage) => prevPage + 1);\n    }\n  };\n\n  const handleMoodChange = (event) => {\n    const mood = event.target.value;\n    setSelectedMood(mood);\n    setCurrentPage(1);\n\n    if (mood === \"All\") {\n      setFilteredMoodRows(moodRows);\n    } else {\n      const filtered = moodRows.filter((row) => row.mood === mood);\n      setFilteredMoodRows(filtered);\n    }\n  };\n\n  const handleRowsPerPageChange = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1);\n  };\n\n  // New feature states and logic\n  const [instrumentalness, setInstrumentalness] = useState(0);\n  const [energyFeature, setEnergyFeature] = useState(0);\n  const [valence, setValence] = useState(0);\n  const [liveness, setLiveness] = useState(0);\n  const [acousticness, setAcousticness] = useState(0);\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchSongs = async () => {\n    try {\n      setLoading(true);\n      setError(\"\"); // Clear any previous errors\n\n      const queryParams = new URLSearchParams({\n        instrumentalness: instrumentalness > 0 ? instrumentalness : undefined,\n        energy: energyFeature > 0 ? energyFeature : undefined,\n        valence: valence > 0 ? valence : undefined,\n        liveness: liveness > 0 ? liveness : undefined,\n        acousticness: acousticness > 0 ? acousticness : undefined,\n      });\n\n      const response = await fetch(\n        `http://localhost:8080/songs-by-audio-features?${queryParams}`\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch songs. Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      if (data.rows && data.rows.length > 0) {\n        setSongs(data.rows); // Use the `rows` property directly\n      } else {\n        setSongs([]); // Clear results if no rows found\n        setError(\"No songs found matching the specified criteria.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to fetch songs. Please try again later.\");\n    } finally {\n      setLoading(false); // Stop loading state\n    }\n  };\n\n  const clearFilters = () => {\n    setInstrumentalness(0);\n    setEnergyFeature(0);\n    setValence(0);\n    setLiveness(0);\n    setAcousticness(0);\n    setSongs([]);\n    setError(\"\");\n  };\n\n  return (\n    <>\n      {/* Original components */}\n      <div id=\"sound-page-wrapper\">\n        {/* Your original navigation bar and sections */}\n      </div>\n\n      {/* New feature UI */}\n      <div>\n        <header>\n          <h1>Filter Songs by Audio Features</h1>\n          <p>Use the sliders below to filter songs based on their audio feature values.</p>\n        </header>\n\n        <div className=\"slider-container\" style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"20px\" }}>\n          <div style={{ flex: \"1 1 200px\" }}>\n            <label htmlFor=\"instrumentalness\">Instrumentalness: {instrumentalness}</label>\n            <input\n              id=\"instrumentalness\"\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.01\"\n              value={instrumentalness}\n              onChange={(e) => setInstrumentalness(parseFloat(e.target.value))}\n            />\n          </div>\n          <div style={{ flex: \"1 1 200px\" }}>\n            <label htmlFor=\"energy\">Energy: {energyFeature}</label>\n            <input\n              id=\"energy\"\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.01\"\n              value={energyFeature}\n              onChange={(e) => setEnergyFeature(parseFloat(e.target.value))}\n            />\n          </div>\n          <div style={{ flex: \"1 1 200px\" }}>\n            <label htmlFor=\"valence\">Valence: {valence}</label>\n            <input\n              id=\"valence\"\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.01\"\n              value={valence}\n              onChange={(e) => setValence(parseFloat(e.target.value))}\n            />\n          </div>\n          <div style={{ flex: \"1 1 200px\" }}>\n            <label htmlFor=\"liveness\">Liveness: {liveness}</label>\n            <input\n              id=\"liveness\"\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.01\"\n              value={liveness}\n              onChange={(e) => setLiveness(parseFloat(e.target.value))}\n            />\n          </div>\n          <div style={{ flex: \"1 1 200px\" }}>\n            <label htmlFor=\"acousticness\">Acousticness: {acousticness}</label>\n            <input\n              id=\"acousticness\"\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.01\"\n              value={acousticness}\n              onChange={(e) => setAcousticness(parseFloat(e.target.value))}\n            />\n          </div>\n        </div>\n\n        <div style={{ margin: \"20px 0\", textAlign: \"center\" }}>\n          <button onClick={fetchSongs} style={{ marginRight: \"10px\" }}>\n            {loading ? \"Loading...\" : \"Search Songs\"}\n          </button>\n          <button onClick={clearFilters} disabled={loading}>\n            Clear Filters\n          </button>\n        </div>\n\n        <div className=\"results\">\n          {error ? (\n            <p style={{ color: \"red\", fontWeight: \"bold\" }}>{error}</p>\n          ) : songs.length > 0 ? (\n            <table>\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Instrumentalness</th>\n                  <th>Energy</th>\n                  <th>Valence</th>\n                  <th>Liveness</th>\n                  <th>Acousticness</th>\n                  <th>URL</th>\n                </tr>\n              </thead>\n              <tbody>\n                {songs.map((song, index) => (\n                  <tr key={index}>\n                    <td>{song.title}</td>\n                    <td>{song.instrumentalness?.toFixed(3)}</td>\n                    <td>{song.energy?.toFixed(3)}</td>\n                    <td>{song.valence?.toFixed(3)}</td>\n                    <td>{song.liveness?.toFixed(3)}</td>\n                    <td>{song.acousticness?.toFixed(3)}</td>\n                    <td>\n                      {song.url ? (\n                        <a href={song.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                          Listen\n                        </a>\n                      ) : (\n                        \"N/A\"\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            !loading && <p>No songs to display. Adjust your filters and try again.</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}