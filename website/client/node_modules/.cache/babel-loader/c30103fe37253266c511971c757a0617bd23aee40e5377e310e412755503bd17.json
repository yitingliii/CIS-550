{"ast":null,"code":"var _jsxFileName = \"/Users/jp/Downloads/CIS-550/website/client/src/pages/SoundPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../style/SoundPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MusicInsights() {\n  _s();\n  const [danceabilityRows, setDanceabilityRows] = useState([]);\n  const [energyRows, setEnergyRows] = useState([]);\n  const [filteredEnergyRows, setFilteredEnergyRows] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"All\");\n  const [topN, setTopN] = useState(5);\n  const [audioProfilesRows, setAudioProfilesRows] = useState([]);\n  const [moodRows, setMoodRows] = useState([]);\n  const [filteredMoodRows, setFilteredMoodRows] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [selectedMood, setSelectedMood] = useState(\"All\");\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // New states for audio features filtering\n  const [instrumentalness, setInstrumentalness] = useState(0);\n  const [energy, setEnergy] = useState(0);\n  const [valence, setValence] = useState(0);\n  const [liveness, setLiveness] = useState(0);\n  const [acousticness, setAcousticness] = useState(0);\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchDanceabilityData();\n    fetchEnergyData();\n    fetchAudioProfilesData();\n    fetchSongsByMood();\n  }, []);\n\n  // Fetch danceability data\n  const fetchDanceabilityData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/tracks/above-average-danceability\");\n      if (!response.ok) throw new Error(`Failed to fetch danceability data. Status: ${response.status}`);\n      const data = await response.json();\n      const randomRows = data.rows.sort(() => 0.5 - Math.random()).slice(0, 5);\n      setDanceabilityRows(randomRows);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load danceability data.\");\n    }\n  };\n\n  // Fetch energy data and genres\n  const fetchEnergyData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/tracks/rank-by-energy\");\n      if (!response.ok) throw new Error(`Failed to fetch energy data. Status: ${response.status}`);\n      const data = await response.json();\n      setEnergyRows(data.rows || []);\n      setFilteredEnergyRows(applyFilters(data.rows || [], selectedGenre, topN));\n      const uniqueGenres = Array.from(new Set(data.rows.map(row => row.genre_name)));\n      setGenres([\"All\", ...uniqueGenres]);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load energy data.\");\n    }\n  };\n\n  // Fetch audio profiles data\n  const fetchAudioProfilesData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/audio-feature-profiles\");\n      if (!response.ok) throw new Error(`Failed to fetch audio profiles data. Status: ${response.status}`);\n      const data = await response.json();\n      setAudioProfilesRows(data.rows || []);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load audio profiles data.\");\n    }\n  };\n\n  // Fetch songs by mood\n  const fetchSongsByMood = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/songs/mood\");\n      if (!response.ok) throw new Error(`Failed to fetch songs by mood. Status: ${response.status}`);\n      const data = await response.json();\n      setMoodRows(data || []);\n      setFilteredMoodRows(data || []);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load songs by mood.\");\n    }\n  };\n\n  // Fetch songs by audio features\n  const fetchSongsByAudioFeatures = async () => {\n    try {\n      setLoading(true);\n      setError(\"\"); // Clear any previous errors\n\n      const queryParams = new URLSearchParams({\n        instrumentalness: instrumentalness > 0 ? instrumentalness : undefined,\n        energy: energy > 0 ? energy : undefined,\n        valence: valence > 0 ? valence : undefined,\n        liveness: liveness > 0 ? liveness : undefined,\n        acousticness: acousticness > 0 ? acousticness : undefined\n      });\n      const response = await fetch(`http://localhost:8080/songs/audio-features?${queryParams}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch songs. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.rows && data.rows.length > 0) {\n        setSongs(data.rows); // Use the `rows` property directly\n      } else {\n        setSongs([]); // Clear results if no rows found\n        setError(\"No songs found matching the specified criteria.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to fetch songs. Please try again later.\");\n    } finally {\n      setLoading(false); // Stop loading state\n    }\n  };\n\n  const clearAudioFilters = () => {\n    setInstrumentalness(0);\n    setEnergy(0);\n    setValence(0);\n    setLiveness(0);\n    setAcousticness(0);\n    setSongs([]);\n    setError(\"\");\n  };\n\n  // Apply filters based on genre and top-N\n  const applyFilters = (rows, genre, n) => {\n    let filtered = rows;\n    if (genre !== \"All\") {\n      filtered = rows.filter(row => row.genre_name === genre);\n    }\n    return filtered.sort((a, b) => b.energy - a.energy).slice(0, n);\n  };\n\n  // Pagination logic for Mood Table\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const paginatedRows = filteredMoodRows.slice(indexOfFirstRow, indexOfLastRow);\n  const totalPages = Math.ceil(filteredMoodRows.length / rowsPerPage);\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(prevPage => prevPage - 1);\n    }\n  };\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(prevPage => prevPage + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sound-page-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://localhost:3000/\",\n              children: \"HomePage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://localhost:3000/search\",\n              children: \"Search Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://localhost:3000/genre\",\n              children: \"Genre Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://localhost:3000/collaboration\",\n              children: \"Collaboration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Track Explorer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"table-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Filter Songs by Audio Features\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-container\",\n          style: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: \"1 1 200px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"instrumentalness\",\n              children: [\"Instrumentalness: \", instrumentalness]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"instrumentalness\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: instrumentalness,\n              onChange: e => setInstrumentalness(parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: \"1 1 200px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"energy\",\n              children: [\"Energy: \", energy]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"energy\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: energy,\n              onChange: e => setEnergy(parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: \"1 1 200px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"valence\",\n              children: [\"Valence: \", valence]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"valence\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: valence,\n              onChange: e => setValence(parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: \"1 1 200px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"liveness\",\n              children: [\"Liveness: \", liveness]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"liveness\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: liveness,\n              onChange: e => setLiveness(parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: \"1 1 200px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"acousticness\",\n              children: [\"Acousticness: \", acousticness]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"acousticness\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: acousticness,\n              onChange: e => setAcousticness(parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"20px 0\",\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchSongsByAudioFeatures,\n            style: {\n              marginRight: \"10px\"\n            },\n            children: loading ? \"Loading...\" : \"Search Songs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearAudioFilters,\n            disabled: loading,\n            children: \"Clear Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            fontWeight: \"bold\"\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this) : songs.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Instrumentalness\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Energy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Valence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Liveness\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Acousticness\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"URL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: songs.map((song, index) => {\n              var _song$instrumentalnes, _song$energy, _song$valence, _song$liveness, _song$acousticness;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: song.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_song$instrumentalnes = song.instrumentalness) === null || _song$instrumentalnes === void 0 ? void 0 : _song$instrumentalnes.toFixed(3)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_song$energy = song.energy) === null || _song$energy === void 0 ? void 0 : _song$energy.toFixed(3)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_song$valence = song.valence) === null || _song$valence === void 0 ? void 0 : _song$valence.toFixed(3)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_song$liveness = song.liveness) === null || _song$liveness === void 0 ? void 0 : _song$liveness.toFixed(3)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_song$acousticness = song.acousticness) === null || _song$acousticness === void 0 ? void 0 : _song$acousticness.toFixed(3)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: song.url ? /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: song.url,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: \"Listen\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 25\n                  }, this) : \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this) : !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No songs to display. Adjust your filters and try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(MusicInsights, \"fnkYoYgd/u9LAzXvFmMIlDPVXro=\");\n_c = MusicInsights;\nvar _c;\n$RefreshReg$(_c, \"MusicInsights\");","map":{"version":3,"names":["React","useState","useEffect","MusicInsights","danceabilityRows","setDanceabilityRows","energyRows","setEnergyRows","filteredEnergyRows","setFilteredEnergyRows","genres","setGenres","selectedGenre","setSelectedGenre","topN","setTopN","audioProfilesRows","setAudioProfilesRows","moodRows","setMoodRows","filteredMoodRows","setFilteredMoodRows","error","setError","selectedMood","setSelectedMood","rowsPerPage","setRowsPerPage","currentPage","setCurrentPage","instrumentalness","setInstrumentalness","energy","setEnergy","valence","setValence","liveness","setLiveness","acousticness","setAcousticness","songs","setSongs","loading","setLoading","fetchDanceabilityData","fetchEnergyData","fetchAudioProfilesData","fetchSongsByMood","response","fetch","ok","Error","status","data","json","randomRows","rows","sort","Math","random","slice","err","console","applyFilters","uniqueGenres","Array","from","Set","map","row","genre_name","fetchSongsByAudioFeatures","queryParams","URLSearchParams","undefined","length","clearAudioFilters","genre","n","filtered","filter","a","b","indexOfLastRow","indexOfFirstRow","paginatedRows","totalPages","ceil","handlePreviousPage","prevPage","handleNextPage","display","flexWrap","gap","flex","e","parseFloat","target","value","margin","textAlign","marginRight","color","fontWeight","song","index","title","toFixed","url"],"sources":["/Users/jp/Downloads/CIS-550/website/client/src/pages/SoundPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../style/SoundPage.css';\n\nexport default function MusicInsights() {\n  const [danceabilityRows, setDanceabilityRows] = useState([]);\n  const [energyRows, setEnergyRows] = useState([]);\n  const [filteredEnergyRows, setFilteredEnergyRows] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"All\");\n  const [topN, setTopN] = useState(5);\n  const [audioProfilesRows, setAudioProfilesRows] = useState([]);\n  const [moodRows, setMoodRows] = useState([]);\n  const [filteredMoodRows, setFilteredMoodRows] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [selectedMood, setSelectedMood] = useState(\"All\");\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // New states for audio features filtering\n  const [instrumentalness, setInstrumentalness] = useState(0);\n  const [energy, setEnergy] = useState(0);\n  const [valence, setValence] = useState(0);\n  const [liveness, setLiveness] = useState(0);\n  const [acousticness, setAcousticness] = useState(0);\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchDanceabilityData();\n    fetchEnergyData();\n    fetchAudioProfilesData();\n    fetchSongsByMood();\n  }, []);\n\n  // Fetch danceability data\n  const fetchDanceabilityData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/tracks/above-average-danceability\");\n      if (!response.ok) throw new Error(`Failed to fetch danceability data. Status: ${response.status}`);\n      const data = await response.json();\n\n      const randomRows = data.rows.sort(() => 0.5 - Math.random()).slice(0, 5);\n      setDanceabilityRows(randomRows);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load danceability data.\");\n    }\n  };\n\n  // Fetch energy data and genres\n  const fetchEnergyData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/tracks/rank-by-energy\");\n      if (!response.ok) throw new Error(`Failed to fetch energy data. Status: ${response.status}`);\n      const data = await response.json();\n\n      setEnergyRows(data.rows || []);\n      setFilteredEnergyRows(applyFilters(data.rows || [], selectedGenre, topN));\n\n      const uniqueGenres = Array.from(new Set(data.rows.map((row) => row.genre_name)));\n      setGenres([\"All\", ...uniqueGenres]);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load energy data.\");\n    }\n  };\n\n  // Fetch audio profiles data\n  const fetchAudioProfilesData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/audio-feature-profiles\");\n      if (!response.ok) throw new Error(`Failed to fetch audio profiles data. Status: ${response.status}`);\n      const data = await response.json();\n      setAudioProfilesRows(data.rows || []);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load audio profiles data.\");\n    }\n  };\n\n  // Fetch songs by mood\n  const fetchSongsByMood = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/songs/mood\");\n      if (!response.ok) throw new Error(`Failed to fetch songs by mood. Status: ${response.status}`);\n      const data = await response.json();\n      setMoodRows(data || []);\n      setFilteredMoodRows(data || []);\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to load songs by mood.\");\n    }\n  };\n\n  // Fetch songs by audio features\n  const fetchSongsByAudioFeatures = async () => {\n    try {\n      setLoading(true);\n      setError(\"\"); // Clear any previous errors\n\n      const queryParams = new URLSearchParams({\n        instrumentalness: instrumentalness > 0 ? instrumentalness : undefined,\n        energy: energy > 0 ? energy : undefined,\n        valence: valence > 0 ? valence : undefined,\n        liveness: liveness > 0 ? liveness : undefined,\n        acousticness: acousticness > 0 ? acousticness : undefined,\n      });\n\n      const response = await fetch(\n        `http://localhost:8080/songs/audio-features?${queryParams}`\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch songs. Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      if (data.rows && data.rows.length > 0) {\n        setSongs(data.rows); // Use the `rows` property directly\n      } else {\n        setSongs([]); // Clear results if no rows found\n        setError(\"No songs found matching the specified criteria.\");\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to fetch songs. Please try again later.\");\n    } finally {\n      setLoading(false); // Stop loading state\n    }\n  };\n\n  const clearAudioFilters = () => {\n    setInstrumentalness(0);\n    setEnergy(0);\n    setValence(0);\n    setLiveness(0);\n    setAcousticness(0);\n    setSongs([]);\n    setError(\"\");\n  };\n\n  // Apply filters based on genre and top-N\n  const applyFilters = (rows, genre, n) => {\n    let filtered = rows;\n\n    if (genre !== \"All\") {\n      filtered = rows.filter((row) => row.genre_name === genre);\n    }\n\n    return filtered.sort((a, b) => b.energy - a.energy).slice(0, n);\n  };\n\n  // Pagination logic for Mood Table\n  const indexOfLastRow = currentPage * rowsPerPage;\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n  const paginatedRows = filteredMoodRows.slice(indexOfFirstRow, indexOfLastRow);\n\n  const totalPages = Math.ceil(filteredMoodRows.length / rowsPerPage);\n\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage((prevPage) => prevPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage((prevPage) => prevPage + 1);\n    }\n  };\n\n  return (\n    <>\n      {/* Navigation Bar */}\n      <div id=\"sound-page-wrapper\">\n        <div id=\"navbar\">\n          <ul>\n            <li><a href=\"http://localhost:3000/\">HomePage</a></li>\n            <li><a href=\"http://localhost:3000/search\">Search Page</a></li>\n            <li><a href=\"http://localhost:3000/genre\">Genre Page</a></li>\n            <li><a href=\"http://localhost:3000/collaboration\">Collaboration</a></li>\n          </ul>\n        </div>\n\n        <h1>Track Explorer</h1>\n\n        {/* Audio Feature Filters Section */}\n        <section className=\"table-section\">\n          <h2>Filter Songs by Audio Features</h2>\n          <div className=\"slider-container\" style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"20px\" }}>\n            <div style={{ flex: \"1 1 200px\" }}>\n              <label htmlFor=\"instrumentalness\">Instrumentalness: {instrumentalness}</label>\n              <input\n                id=\"instrumentalness\"\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.01\"\n                value={instrumentalness}\n                onChange={(e) => setInstrumentalness(parseFloat(e.target.value))}\n              />\n            </div>\n            <div style={{ flex: \"1 1 200px\" }}>\n              <label htmlFor=\"energy\">Energy: {energy}</label>\n              <input\n                id=\"energy\"\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.01\"\n                value={energy}\n                onChange={(e) => setEnergy(parseFloat(e.target.value))}\n              />\n            </div>\n            <div style={{ flex: \"1 1 200px\" }}>\n              <label htmlFor=\"valence\">Valence: {valence}</label>\n              <input\n                id=\"valence\"\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.01\"\n                value={valence}\n                onChange={(e) => setValence(parseFloat(e.target.value))}\n              />\n            </div>\n            <div style={{ flex: \"1 1 200px\" }}>\n              <label htmlFor=\"liveness\">Liveness: {liveness}</label>\n              <input\n                id=\"liveness\"\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.01\"\n                value={liveness}\n                onChange={(e) => setLiveness(parseFloat(e.target.value))}\n              />\n            </div>\n            <div style={{ flex: \"1 1 200px\" }}>\n              <label htmlFor=\"acousticness\">Acousticness: {acousticness}</label>\n              <input\n                id=\"acousticness\"\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.01\"\n                value={acousticness}\n                onChange={(e) => setAcousticness(parseFloat(e.target.value))}\n              />\n            </div>\n          </div>\n\n          <div style={{ margin: \"20px 0\", textAlign: \"center\" }}>\n            <button onClick={fetchSongsByAudioFeatures} style={{ marginRight: \"10px\" }}>\n              {loading ? \"Loading...\" : \"Search Songs\"}\n            </button>\n            <button onClick={clearAudioFilters} disabled={loading}>\n              Clear Filters\n            </button>\n          </div>\n\n          {error ? (\n            <p style={{ color: \"red\", fontWeight: \"bold\" }}>{error}</p>\n          ) : songs.length > 0 ? (\n            <table>\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Instrumentalness</th>\n                  <th>Energy</th>\n                  <th>Valence</th>\n                  <th>Liveness</th>\n                  <th>Acousticness</th>\n                  <th>URL</th>\n                </tr>\n              </thead>\n              <tbody>\n                {songs.map((song, index) => (\n                  <tr key={index}>\n                    <td>{song.title}</td>\n                    <td>{song.instrumentalness?.toFixed(3)}</td>\n                    <td>{song.energy?.toFixed(3)}</td>\n                    <td>{song.valence?.toFixed(3)}</td>\n                    <td>{song.liveness?.toFixed(3)}</td>\n                    <td>{song.acousticness?.toFixed(3)}</td>\n                    <td>\n                      {song.url ? (\n                        <a href={song.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                          Listen\n                        </a>\n                      ) : (\n                        \"N/A\"\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            !loading && <p>No songs to display. Adjust your filters and try again.</p>\n          )}\n        </section>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}