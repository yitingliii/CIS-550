{"ast":null,"code":"var _jsxFileName = \"/Users/jp/Downloads/2024Fall/CIS 5500/CIS-550/website/client/src/pages/SoundPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"../style/SearchPage.css\";\n// import \"../index.css\";\n\n// // 改\n// export default function SearchSong() {\n//   const [genres, setGenres] = useState([]);\n//   const [artists, setArtists] = useState([]);\n//   const [songs, setSongs] = useState([]);\n\n//   // Error states for each section\n//   const [genreError, setGenreError] = useState(\"\");\n//   const [artistError, setArtistError] = useState(\"\");\n\n//   // States for Genre Search\n//   const [selectedGenre, setSelectedGenre] = useState(\"\");\n//   const [genreTerm, setGenreTerm] = useState(\"\");\n\n//   // State for Artist Search\n//   const [selectedArtist, setSelectedArtist] = useState(\"\");\n\n//   // Fetch genres on mount\n//   useEffect(() => {\n//     const fetchGenres = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8080/genres\");\n//         if (!response.ok) {\n//           throw new Error(`Failed to fetch genres. Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n//         setGenres(data.rows); // Assuming genres are in `rows`\n//       } catch (error) {\n//         console.error(\"Error fetching genres:\", error);\n//         setGenreError(\"Failed to load genres.\");\n//       }\n//     };\n\n//     fetchGenres();\n//   }, []);\n\n//   // Fetch artists on mount\n//   useEffect(() => {\n//     const fetchArtists = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8080/artists\");\n//         if (!response.ok) {\n//           throw new Error(`Failed to fetch artists. Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n\n//         // Assuming artists are in `rows`\n//         if (Array.isArray(data.rows)) {\n//           setArtists(data.rows);\n//         } else {\n//           throw new Error(\"Invalid response structure: Expected 'rows' to be an array\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching artists:\", error);\n//         setArtistError(\"Failed to load artists.\");\n//       }\n//     };\n\n//     fetchArtists();\n//   }, []);\n\n//   const handleSearchByGenre = async (e) => {\n//     e.preventDefault();\n//     setGenreError(\"\");\n//     setSongs([]);\n//     if (!selectedGenre) {\n//       setGenreError(\"Please select a genre.\");\n//       return;\n//     }\n\n//     if (!genreTerm) {\n//       setGenreError(\"Please select a results limit.\");\n//       return;\n//     }\n\n//     try {\n//       const encodedGenre = encodeURIComponent(selectedGenre);\n//       const response = await fetch(\n//         `http://localhost:8080/genres/${encodedGenre}/tracks?limit=${genreTerm}`\n//       );\n//       if (!response.ok) {\n//         throw new Error(`Failed to fetch songs by genre. Status: ${response.status}`);\n//       }\n//       const data = await response.json();\n//       setSongs(data); // Assuming data is an array of songs\n//     } catch (error) {\n//       console.error(\"Error fetching songs by genre:\", error);\n//       setGenreError(\"Failed to load songs by genre.\");\n//     }\n//   };\n\n//   const handleSearchByArtist = async (e) => {\n//     e.preventDefault();\n//     setArtistError(\"\");\n//     setSongs([]);\n//     if (!selectedArtist) {\n//       setArtistError(\"Please select an artist.\");\n//       return;\n//     }\n\n//     try {\n//       const encodedArtist = encodeURIComponent(selectedArtist);\n//       const response = await fetch(\n//         `http://localhost:8080/artists/${encodedArtist}/tracks`\n//       );\n//       if (!response.ok) {\n//         throw new Error(`Failed to fetch songs by artist. Status: ${response.status}`);\n//       }\n//       const data = await response.json();\n//       setSongs(data); // Assuming data is an array of songs\n//     } catch (error) {\n//       console.error(\"Error fetching songs by artist:\", error);\n//       setArtistError(\"Failed to load songs by artist.\");\n//     }\n//   };\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../index.css\";\nexport default function FeatureSelection() {\n  _s();\n  // State variables for features and results\n  const [songs, setSongs] = useState([]);\n  const [featureFilters, setFeatureFilters] = useState({\n    danceability: [0, 1],\n    loudness: [-60, 0],\n    tempo: [0, 250],\n    energy: [0, 1]\n  });\n  const [error, setError] = useState(\"\");\n\n  // Fetch all songs on component mount for initial display\n  useEffect(() => {\n    const fetchAllSongs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/getAllAudioFeatures\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch songs. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setSongs(data); // Assuming data is an array of songs\n      } catch (error) {\n        console.error(\"Error fetching songs:\", error);\n        setError(\"Failed to load songs.\");\n      }\n    };\n    fetchAllSongs();\n  }, []);\n\n  // Handle range slider changes\n  const handleRangeChange = (feature, min, max) => {\n    setFeatureFilters(prev => ({\n      ...prev,\n      [feature]: [min, max]\n    }));\n  };\n\n  // Handle feature-based search\n  const handleFeatureSearch = async e => {\n    e.preventDefault();\n    setError(\"\"); // Reset error state\n    setSongs([]); // Reset song list\n\n    try {\n      const queryParams = new URLSearchParams();\n      Object.keys(featureFilters).forEach(feature => {\n        queryParams.append(`${feature}_low`, featureFilters[feature][0]);\n        queryParams.append(`${feature}_high`, featureFilters[feature][1]);\n      });\n      const response = await fetch(`http://localhost:8080/getTopAudioFeatureProfiles?${queryParams.toString()}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch songs by features. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setSongs(data || []); // Assuming data is an array of songs\n    } catch (error) {\n      console.error(\"Error fetching songs by features:\", error);\n      setError(\"Failed to load songs by features.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, \"HomePage\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, \"Search Page\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/feature-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, \"Feature Selection\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feature-selection-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, \"Select Songs by Features\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFeatureSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feature-slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"Danceability\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"1\",\n    step: \"0.01\",\n    value: featureFilters.danceability[0],\n    onChange: e => handleRangeChange(\"danceability\", parseFloat(e.target.value), featureFilters.danceability[1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"1\",\n    step: \"0.01\",\n    value: featureFilters.danceability[1],\n    onChange: e => handleRangeChange(\"danceability\", featureFilters.danceability[0], parseFloat(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, featureFilters.danceability[0], \" - \", featureFilters.danceability[1])), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feature-slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, \"Loudness\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"-60\",\n    max: \"0\",\n    step: \"1\",\n    value: featureFilters.loudness[0],\n    onChange: e => handleRangeChange(\"loudness\", parseFloat(e.target.value), featureFilters.loudness[1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"-60\",\n    max: \"0\",\n    step: \"1\",\n    value: featureFilters.loudness[1],\n    onChange: e => handleRangeChange(\"loudness\", featureFilters.loudness[0], parseFloat(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, featureFilters.loudness[0], \" dB - \", featureFilters.loudness[1], \" dB\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, \"Search Songs\")), error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }, error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"songs-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, \"Song Results\"), songs.length > 0 ? songs.map(song => /*#__PURE__*/React.createElement(\"div\", {\n    key: song.id,\n    className: \"song-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, song.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, \"Artist: \", song.artist), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, \"Album: \", song.album), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, \"Danceability: \", song.danceability), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, \"Loudness: \", song.loudness, \" dB\"))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }, \"No songs found.\")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 15\n    }\n  }, \"HomePage\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }, \"Search Page\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, \"Genre Page\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/collaboration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }, \"Collaboration\")))));\n}\n_s(FeatureSelection, \"P7ATR+nFIWasbZkXAvgrJZNqDHM=\");\n_c = FeatureSelection;\nvar _c;\n$RefreshReg$(_c, \"FeatureSelection\");","map":{"version":3,"names":["React","useState","useEffect","FeatureSelection","songs","setSongs","featureFilters","setFeatureFilters","danceability","loudness","tempo","energy","error","setError","fetchAllSongs","response","fetch","ok","Error","status","data","json","console","handleRangeChange","feature","min","max","prev","handleFeatureSearch","e","preventDefault","queryParams","URLSearchParams","Object","keys","forEach","append","toString","parseFloat","target","value","length","map","song","id","title","artist","album"],"sources":["/Users/jp/Downloads/2024Fall/CIS 5500/CIS-550/website/client/src/pages/SoundPage.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import \"../style/SearchPage.css\";\n// import \"../index.css\";\n\n// // 改\n// export default function SearchSong() {\n//   const [genres, setGenres] = useState([]);\n//   const [artists, setArtists] = useState([]);\n//   const [songs, setSongs] = useState([]);\n\n//   // Error states for each section\n//   const [genreError, setGenreError] = useState(\"\");\n//   const [artistError, setArtistError] = useState(\"\");\n\n//   // States for Genre Search\n//   const [selectedGenre, setSelectedGenre] = useState(\"\");\n//   const [genreTerm, setGenreTerm] = useState(\"\");\n\n//   // State for Artist Search\n//   const [selectedArtist, setSelectedArtist] = useState(\"\");\n\n//   // Fetch genres on mount\n//   useEffect(() => {\n//     const fetchGenres = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8080/genres\");\n//         if (!response.ok) {\n//           throw new Error(`Failed to fetch genres. Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n//         setGenres(data.rows); // Assuming genres are in `rows`\n//       } catch (error) {\n//         console.error(\"Error fetching genres:\", error);\n//         setGenreError(\"Failed to load genres.\");\n//       }\n//     };\n\n//     fetchGenres();\n//   }, []);\n\n//   // Fetch artists on mount\n//   useEffect(() => {\n//     const fetchArtists = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8080/artists\");\n//         if (!response.ok) {\n//           throw new Error(`Failed to fetch artists. Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n\n//         // Assuming artists are in `rows`\n//         if (Array.isArray(data.rows)) {\n//           setArtists(data.rows);\n//         } else {\n//           throw new Error(\"Invalid response structure: Expected 'rows' to be an array\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching artists:\", error);\n//         setArtistError(\"Failed to load artists.\");\n//       }\n//     };\n\n//     fetchArtists();\n//   }, []);\n\n//   const handleSearchByGenre = async (e) => {\n//     e.preventDefault();\n//     setGenreError(\"\");\n//     setSongs([]);\n//     if (!selectedGenre) {\n//       setGenreError(\"Please select a genre.\");\n//       return;\n//     }\n  \n//     if (!genreTerm) {\n//       setGenreError(\"Please select a results limit.\");\n//       return;\n//     }\n\n//     try {\n//       const encodedGenre = encodeURIComponent(selectedGenre);\n//       const response = await fetch(\n//         `http://localhost:8080/genres/${encodedGenre}/tracks?limit=${genreTerm}`\n//       );\n//       if (!response.ok) {\n//         throw new Error(`Failed to fetch songs by genre. Status: ${response.status}`);\n//       }\n//       const data = await response.json();\n//       setSongs(data); // Assuming data is an array of songs\n//     } catch (error) {\n//       console.error(\"Error fetching songs by genre:\", error);\n//       setGenreError(\"Failed to load songs by genre.\");\n//     }\n//   };\n\n//   const handleSearchByArtist = async (e) => {\n//     e.preventDefault();\n//     setArtistError(\"\");\n//     setSongs([]);\n//     if (!selectedArtist) {\n//       setArtistError(\"Please select an artist.\");\n//       return;\n//     }\n\n//     try {\n//       const encodedArtist = encodeURIComponent(selectedArtist);\n//       const response = await fetch(\n//         `http://localhost:8080/artists/${encodedArtist}/tracks`\n//       );\n//       if (!response.ok) {\n//         throw new Error(`Failed to fetch songs by artist. Status: ${response.status}`);\n//       }\n//       const data = await response.json();\n//       setSongs(data); // Assuming data is an array of songs\n//     } catch (error) {\n//       console.error(\"Error fetching songs by artist:\", error);\n//       setArtistError(\"Failed to load songs by artist.\");\n//     }\n//   };\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../index.css\";\n\nexport default function FeatureSelection() {\n  // State variables for features and results\n  const [songs, setSongs] = useState([]);\n  const [featureFilters, setFeatureFilters] = useState({\n    danceability: [0, 1],\n    loudness: [-60, 0],\n    tempo: [0, 250],\n    energy: [0, 1],\n  });\n\n  const [error, setError] = useState(\"\");\n\n  // Fetch all songs on component mount for initial display\n  useEffect(() => {\n    const fetchAllSongs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/getAllAudioFeatures\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch songs. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setSongs(data); // Assuming data is an array of songs\n      } catch (error) {\n        console.error(\"Error fetching songs:\", error);\n        setError(\"Failed to load songs.\");\n      }\n    };\n\n    fetchAllSongs();\n  }, []);\n\n  // Handle range slider changes\n  const handleRangeChange = (feature, min, max) => {\n    setFeatureFilters((prev) => ({\n      ...prev,\n      [feature]: [min, max],\n    }));\n  };\n\n  // Handle feature-based search\n  const handleFeatureSearch = async (e) => {\n    e.preventDefault();\n    setError(\"\"); // Reset error state\n    setSongs([]); // Reset song list\n\n    try {\n      const queryParams = new URLSearchParams();\n      Object.keys(featureFilters).forEach((feature) => {\n        queryParams.append(`${feature}_low`, featureFilters[feature][0]);\n        queryParams.append(`${feature}_high`, featureFilters[feature][1]);\n      });\n\n      const response = await fetch(\n        `http://localhost:8080/getTopAudioFeatureProfiles?${queryParams.toString()}`\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch songs by features. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setSongs(data || []); // Assuming data is an array of songs\n    } catch (error) {\n      console.error(\"Error fetching songs by features:\", error);\n      setError(\"Failed to load songs by features.\");\n    }\n  };\n\n  return (\n    <div>\n      {/* Navigation Bar */}\n      <div id=\"navbar\">\n        <ul>\n          <li><a href=\"http://localhost:3000/\">HomePage</a></li>\n          <li><a href=\"http://localhost:3000/search\">Search Page</a></li>\n          <li><a href=\"http://localhost:3000/feature-selection\">Feature Selection</a></li>\n        </ul>\n      </div>\n\n      {/* Feature Selection Section */}\n      <div className=\"feature-selection-section\">\n        <h2>Select Songs by Features</h2>\n        <form onSubmit={handleFeatureSearch}>\n          {/* Danceability */}\n          <div className=\"feature-slider\">\n            <label>Danceability</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.01\"\n              value={featureFilters.danceability[0]}\n              onChange={(e) =>\n                handleRangeChange(\n                  \"danceability\",\n                  parseFloat(e.target.value),\n                  featureFilters.danceability[1]\n                )\n              }\n            />\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.01\"\n              value={featureFilters.danceability[1]}\n              onChange={(e) =>\n                handleRangeChange(\n                  \"danceability\",\n                  featureFilters.danceability[0],\n                  parseFloat(e.target.value)\n                )\n              }\n            />\n            <p>\n              {featureFilters.danceability[0]} - {featureFilters.danceability[1]}\n            </p>\n          </div>\n\n          {/* Loudness */}\n          <div className=\"feature-slider\">\n            <label>Loudness</label>\n            <input\n              type=\"range\"\n              min=\"-60\"\n              max=\"0\"\n              step=\"1\"\n              value={featureFilters.loudness[0]}\n              onChange={(e) =>\n                handleRangeChange(\n                  \"loudness\",\n                  parseFloat(e.target.value),\n                  featureFilters.loudness[1]\n                )\n              }\n            />\n            <input\n              type=\"range\"\n              min=\"-60\"\n              max=\"0\"\n              step=\"1\"\n              value={featureFilters.loudness[1]}\n              onChange={(e) =>\n                handleRangeChange(\n                  \"loudness\",\n                  featureFilters.loudness[0],\n                  parseFloat(e.target.value)\n                )\n              }\n            />\n            <p>\n              {featureFilters.loudness[0]} dB - {featureFilters.loudness[1]} dB\n            </p>\n          </div>\n\n          <button type=\"submit\">Search Songs</button>\n        </form>\n        {error && <p className=\"error\">{error}</p>}\n      </div>\n\n      {/* Songs Display Section */}\n      <div className=\"songs-list\">\n        <h2>Song Results</h2>\n        {songs.length > 0 ? (\n          songs.map((song) => (\n            <div key={song.id} className=\"song-card\">\n              <h3>{song.title}</h3>\n              <p>Artist: {song.artist}</p>\n              <p>Album: {song.album}</p>\n              <p>Danceability: {song.danceability}</p>\n              <p>Loudness: {song.loudness} dB</p>\n            </div>\n          ))\n        ) : (\n          <p>No songs found.</p>\n        )}\n      </div>\n    </div>\n  );\n\n\n\n\n  return (\n    <div>\n\n      {/* Navigation Bar */}\n      {/* 不要动 */}\n      <div id=\"navbar\">\n        <ul>\n          <li><a href=\"http://localhost:3000/\">HomePage</a></li>\n          <li><a href=\"http://localhost:3000/search\">Search Page</a></li>\n          <li><a href=\"http://localhost:3000/genre\">Genre Page</a></li>\n          <li><a href=\"http://localhost:3000/collaboration\">Collaboration</a></li>\n        </ul>\n      </div>\n\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}