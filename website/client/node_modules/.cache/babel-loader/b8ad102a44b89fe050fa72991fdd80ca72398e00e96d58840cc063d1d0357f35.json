{"ast":null,"code":"var _jsxFileName = \"/Users/jp/Downloads/2024Fall/CIS 5500/CIS-550/website/client/src/components/LazyTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, Paper } from '@mui/material';\nexport default function LazyTable(_ref) {\n  _s();\n  let {\n    route,\n    columns,\n    defaultPageSize = 10,\n    rowsPerPageOptions = [5, 10, 25]\n  } = _ref;\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(0); // 0-indexed for TablePagination\n  const [rowsPerPage, setRowsPerPage] = useState(defaultPageSize);\n  useEffect(() => {\n    fetch(`${route}?page=${page + 1}&page_size=${rowsPerPage}`).then(response => response.json()).then(json => setData(json)).catch(error => console.error('Error fetching data:', error));\n  }, [route, page, rowsPerPage]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0); // Reset to the first page\n  };\n\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, column.headerName)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, data.map((row, index) => /*#__PURE__*/React.createElement(TableRow, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, row[column.field])))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: rowsPerPageOptions,\n    component: \"div\",\n    count: -1 // Unknown total; use -1 for server-side paginated data\n    ,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onPageChange: handleChangePage,\n    onRowsPerPageChange: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n}\n_s(LazyTable, \"VK8e5ZIpy5WqUgLAIoSQqB9Bql8=\");\n_c = LazyTable;\nvar _c;\n$RefreshReg$(_c, \"LazyTable\");","map":{"version":3,"names":["React","useState","useEffect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","Paper","LazyTable","route","columns","defaultPageSize","rowsPerPageOptions","data","setData","page","setPage","rowsPerPage","setRowsPerPage","fetch","then","response","json","catch","error","console","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","map","column","field","headerName","row","index"],"sources":["/Users/jp/Downloads/2024Fall/CIS 5500/CIS-550/website/client/src/components/LazyTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  Paper,\n} from '@mui/material';\n\nexport default function LazyTable({ route, columns, defaultPageSize = 10, rowsPerPageOptions = [5, 10, 25] }) {\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(0); // 0-indexed for TablePagination\n  const [rowsPerPage, setRowsPerPage] = useState(defaultPageSize);\n\n  useEffect(() => {\n    fetch(`${route}?page=${page + 1}&page_size=${rowsPerPage}`)\n      .then((response) => response.json())\n      .then((json) => setData(json))\n      .catch((error) => console.error('Error fetching data:', error));\n  }, [route, page, rowsPerPage]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0); // Reset to the first page\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {columns.map((column) => (\n              <TableCell key={column.field}>{column.headerName}</TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row, index) => (\n            <TableRow key={index}>\n              {columns.map((column) => (\n                <TableCell key={column.field}>\n                  {row[column.field]}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={rowsPerPageOptions}\n        component=\"div\"\n        count={-1} // Unknown total; use -1 for server-side paginated data\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </TableContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}