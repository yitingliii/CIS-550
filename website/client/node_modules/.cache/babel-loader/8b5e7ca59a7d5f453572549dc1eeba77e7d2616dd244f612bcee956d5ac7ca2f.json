{"ast":null,"code":"var _jsxFileName = \"/Users/jp/Downloads/2024Fall/CIS 5500/CIS-550/website/client/src/pages/SoundPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\"; // Import Material-UI DataGrid\n\nexport default function MusicInsights() {\n  _s();\n  const [profilesData, setProfilesData] = useState([]); // Data for top audio profiles\n  const [loudnessData, setLoudnessData] = useState([]); // Data for loudness-ranked tracks\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchProfilesData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/topAudioProfiles\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch audio profiles. Status: ${response.status}`);\n        }\n        const profiles = await response.json();\n        setProfilesData(profiles);\n      } catch (err) {\n        console.error(\"Error fetching audio profiles:\", err);\n        setError(\"Failed to load audio profiles by genre.\");\n      }\n    };\n    const fetchLoudnessData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/rankTracksByLoudness\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch loudness rankings. Status: ${response.status}`);\n        }\n        const loudness = await response.json();\n        setLoudnessData(loudness);\n      } catch (err) {\n        console.error(\"Error fetching loudness rankings:\", err);\n        setError(\"Failed to load loudness rankings.\");\n      }\n    };\n    fetchProfilesData();\n    fetchLoudnessData();\n  }, []);\n\n  // Columns for Top Audio Profiles Table\n  const profileColumns = [{\n    field: \"genre_name\",\n    headerName: \"Genre\",\n    width: 150\n  }, {\n    field: \"valence\",\n    headerName: \"Valence\",\n    width: 100,\n    type: \"number\"\n  }, {\n    field: \"energy\",\n    headerName: \"Energy\",\n    width: 100,\n    type: \"number\"\n  }, {\n    field: \"danceability\",\n    headerName: \"Danceability\",\n    width: 150,\n    type: \"number\"\n  }, {\n    field: \"profile_count\",\n    headerName: \"Profile Count\",\n    width: 150,\n    type: \"number\"\n  }];\n\n  // Columns for Loudness Rankings Table\n  const loudnessColumns = [{\n    field: \"genre_name\",\n    headerName: \"Genre\",\n    width: 150\n  }, {\n    field: \"loudness_rank\",\n    headerName: \"Rank\",\n    width: 100,\n    type: \"number\"\n  }, {\n    field: \"title\",\n    headerName: \"Track Title\",\n    width: 200\n  }, {\n    field: \"loudness\",\n    headerName: \"Loudness (dB)\",\n    width: 150,\n    type: \"number\"\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"20px\",\n      maxWidth: \"1200px\",\n      margin: \"0 auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Music Insights\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      marginBottom: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Top Audio Profiles by Genre\"), profilesData.length > 0 ? /*#__PURE__*/React.createElement(DataGrid, {\n    rows: profilesData.map((row, index) => ({\n      id: index,\n      ...row\n    })),\n    columns: profileColumns,\n    pageSize: 5,\n    rowsPerPageOptions: [5, 10, 25],\n    autoHeight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"No data available for audio profiles.\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Loudness Rankings by Genre\"), loudnessData.length > 0 ? /*#__PURE__*/React.createElement(DataGrid, {\n    rows: loudnessData.map((row, index) => ({\n      id: index,\n      ...row\n    })),\n    columns: loudnessColumns,\n    pageSize: 5,\n    rowsPerPageOptions: [5, 10, 25],\n    autoHeight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"No data available for loudness rankings.\")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"HomePage\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Search Page\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Genre Page\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/collaboration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Collaboration\")))));\n}\n_s(MusicInsights, \"w17kVs7RTGnSBQG2SsGonL9PuRI=\");\n_c = MusicInsights;\nvar _c;\n$RefreshReg$(_c, \"MusicInsights\");","map":{"version":3,"names":["React","useEffect","useState","DataGrid","MusicInsights","profilesData","setProfilesData","loudnessData","setLoudnessData","error","setError","fetchProfilesData","response","fetch","ok","Error","status","profiles","json","err","console","fetchLoudnessData","loudness","profileColumns","field","headerName","width","type","loudnessColumns","padding","maxWidth","margin","color","marginBottom","length","map","row","index","id"],"sources":["/Users/jp/Downloads/2024Fall/CIS 5500/CIS-550/website/client/src/pages/SoundPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\"; // Import Material-UI DataGrid\n\nexport default function MusicInsights() {\n  const [profilesData, setProfilesData] = useState([]); // Data for top audio profiles\n  const [loudnessData, setLoudnessData] = useState([]); // Data for loudness-ranked tracks\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    const fetchProfilesData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/topAudioProfiles\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch audio profiles. Status: ${response.status}`);\n        }\n        const profiles = await response.json();\n        setProfilesData(profiles);\n      } catch (err) {\n        console.error(\"Error fetching audio profiles:\", err);\n        setError(\"Failed to load audio profiles by genre.\");\n      }\n    };\n\n    const fetchLoudnessData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/rankTracksByLoudness\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch loudness rankings. Status: ${response.status}`);\n        }\n        const loudness = await response.json();\n        setLoudnessData(loudness);\n      } catch (err) {\n        console.error(\"Error fetching loudness rankings:\", err);\n        setError(\"Failed to load loudness rankings.\");\n      }\n    };\n\n    fetchProfilesData();\n    fetchLoudnessData();\n  }, []);\n\n  // Columns for Top Audio Profiles Table\n  const profileColumns = [\n    { field: \"genre_name\", headerName: \"Genre\", width: 150 },\n    { field: \"valence\", headerName: \"Valence\", width: 100, type: \"number\" },\n    { field: \"energy\", headerName: \"Energy\", width: 100, type: \"number\" },\n    { field: \"danceability\", headerName: \"Danceability\", width: 150, type: \"number\" },\n    { field: \"profile_count\", headerName: \"Profile Count\", width: 150, type: \"number\" },\n  ];\n\n  // Columns for Loudness Rankings Table\n  const loudnessColumns = [\n    { field: \"genre_name\", headerName: \"Genre\", width: 150 },\n    { field: \"loudness_rank\", headerName: \"Rank\", width: 100, type: \"number\" },\n    { field: \"title\", headerName: \"Track Title\", width: 200 },\n    { field: \"loudness\", headerName: \"Loudness (dB)\", width: 150, type: \"number\" },\n  ];\n\n  return (\n    <div style={{ padding: \"20px\", maxWidth: \"1200px\", margin: \"0 auto\" }}>\n      <h1>Music Insights</h1>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      {/* Top Audio Profiles by Genre */}\n      <section style={{ marginBottom: \"40px\" }}>\n        <h2>Top Audio Profiles by Genre</h2>\n        {profilesData.length > 0 ? (\n          <DataGrid\n            rows={profilesData.map((row, index) => ({ id: index, ...row }))}\n            columns={profileColumns}\n            pageSize={5}\n            rowsPerPageOptions={[5, 10, 25]}\n            autoHeight\n          />\n        ) : (\n          <p>No data available for audio profiles.</p>\n        )}\n      </section>\n\n      {/* Loudness Rankings by Genre */}\n      <section>\n        <h2>Loudness Rankings by Genre</h2>\n        {loudnessData.length > 0 ? (\n          <DataGrid\n            rows={loudnessData.map((row, index) => ({ id: index, ...row }))}\n            columns={loudnessColumns}\n            pageSize={5}\n            rowsPerPageOptions={[5, 10, 25]}\n            autoHeight\n          />\n        ) : (\n          <p>No data available for loudness rankings.</p>\n        )}\n      </section>\n    </div>\n  );\n\n\n  return (\n    <div>\n\n      {/* Navigation Bar */}\n      {/* 不要动 */}\n      <div id=\"navbar\">\n        <ul>\n          <li><a href=\"http://localhost:3000/\">HomePage</a></li>\n          <li><a href=\"http://localhost:3000/search\">Search Page</a></li>\n          <li><a href=\"http://localhost:3000/genre\">Genre Page</a></li>\n          <li><a href=\"http://localhost:3000/collaboration\">Collaboration</a></li>\n        </ul>\n      </div>\n\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;;AAE7C,eAAe,SAASC,aAAa,GAAG;EAAA;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMU,iBAAiB,GAAG,YAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;QACtE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,2CAA0CH,QAAQ,CAACI,MAAO,EAAC,CAAC;QAC/E;QACA,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;QACtCZ,eAAe,CAACW,QAAQ,CAAC;MAC3B,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACX,KAAK,CAAC,gCAAgC,EAAEU,GAAG,CAAC;QACpDT,QAAQ,CAAC,yCAAyC,CAAC;MACrD;IACF,CAAC;IAED,MAAMW,iBAAiB,GAAG,YAAY;MACpC,IAAI;QACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC1E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,8CAA6CH,QAAQ,CAACI,MAAO,EAAC,CAAC;QAClF;QACA,MAAMM,QAAQ,GAAG,MAAMV,QAAQ,CAACM,IAAI,EAAE;QACtCV,eAAe,CAACc,QAAQ,CAAC;MAC3B,CAAC,CAAC,OAAOH,GAAG,EAAE;QACZC,OAAO,CAACX,KAAK,CAAC,mCAAmC,EAAEU,GAAG,CAAC;QACvDT,QAAQ,CAAC,mCAAmC,CAAC;MAC/C;IACF,CAAC;IAEDC,iBAAiB,EAAE;IACnBU,iBAAiB,EAAE;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,cAAc,GAAG,CACrB;IAAEC,KAAK,EAAE,YAAY;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAI,CAAC,EACxD;IAAEF,KAAK,EAAE,SAAS;IAAEC,UAAU,EAAE,SAAS;IAAEC,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAS,CAAC,EACvE;IAAEH,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAE,QAAQ;IAAEC,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAS,CAAC,EACrE;IAAEH,KAAK,EAAE,cAAc;IAAEC,UAAU,EAAE,cAAc;IAAEC,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAS,CAAC,EACjF;IAAEH,KAAK,EAAE,eAAe;IAAEC,UAAU,EAAE,eAAe;IAAEC,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAS,CAAC,CACpF;;EAED;EACA,MAAMC,eAAe,GAAG,CACtB;IAAEJ,KAAK,EAAE,YAAY;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAI,CAAC,EACxD;IAAEF,KAAK,EAAE,eAAe;IAAEC,UAAU,EAAE,MAAM;IAAEC,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC1E;IAAEH,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAI,CAAC,EACzD;IAAEF,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE,eAAe;IAAEC,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAS,CAAC,CAC/E;EAED,oBACE;IAAK,KAAK,EAAE;MAAEE,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACpE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,gBAAc,CAAK,EACtBtB,KAAK,iBAAI;IAAG,KAAK,EAAE;MAAEuB,KAAK,EAAE;IAAM,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEvB,KAAK,CAAK,eAGjD;IAAS,KAAK,EAAE;MAAEwB,YAAY,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACvC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,6BAA2B,CAAK,EACnC5B,YAAY,CAAC6B,MAAM,GAAG,CAAC,gBACtB,oBAAC,QAAQ;IACP,IAAI,EAAE7B,YAAY,CAAC8B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,MAAM;MAAEC,EAAE,EAAED,KAAK;MAAE,GAAGD;IAAI,CAAC,CAAC,CAAE;IAChE,OAAO,EAAEb,cAAe;IACxB,QAAQ,EAAE,CAAE;IACZ,kBAAkB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE;IAChC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACV,gBAEF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,uCAAqC,CACzC,CACO,eAGV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,4BAA0B,CAAK,EAClChB,YAAY,CAAC2B,MAAM,GAAG,CAAC,gBACtB,oBAAC,QAAQ;IACP,IAAI,EAAE3B,YAAY,CAAC4B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,MAAM;MAAEC,EAAE,EAAED,KAAK;MAAE,GAAGD;IAAI,CAAC,CAAC,CAAE;IAChE,OAAO,EAAER,eAAgB;IACzB,QAAQ,EAAE,CAAE;IACZ,kBAAkB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE;IAChC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACV,gBAEF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,0CAAwC,CAC5C,CACO,CACN;EAIR,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAIE;IAAK,EAAE,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAI;IAAG,IAAI,EAAC,wBAAwB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,UAAQ,CAAI,CAAK,eACtD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAI;IAAG,IAAI,EAAC,8BAA8B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,aAAW,CAAI,CAAK,eAC/D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAI;IAAG,IAAI,EAAC,6BAA6B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,YAAU,CAAI,CAAK,eAC7D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAAI;IAAG,IAAI,EAAC,qCAAqC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,eAAa,CAAI,CAAK,CACrE,CACD,CAEF;AAEV;AAAC,GA/GuBxB,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}