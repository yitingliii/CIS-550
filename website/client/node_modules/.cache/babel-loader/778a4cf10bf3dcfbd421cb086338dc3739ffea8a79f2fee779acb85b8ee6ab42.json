{"ast":null,"code":"var _jsxFileName = \"/Users/jp/Downloads/2024Fall/CIS 5500/CIS-550/website/client/src/pages/SoundPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"../style/SearchPage.css\";\n// import \"../index.css\";\n\n// // 改\n// export default function SearchSong() {\n//   const [genres, setGenres] = useState([]);\n//   const [artists, setArtists] = useState([]);\n//   const [songs, setSongs] = useState([]);\n\n//   // Error states for each section\n//   const [genreError, setGenreError] = useState(\"\");\n//   const [artistError, setArtistError] = useState(\"\");\n\n//   // States for Genre Search\n//   const [selectedGenre, setSelectedGenre] = useState(\"\");\n//   const [genreTerm, setGenreTerm] = useState(\"\");\n\n//   // State for Artist Search\n//   const [selectedArtist, setSelectedArtist] = useState(\"\");\n\n//   // Fetch genres on mount\n//   useEffect(() => {\n//     const fetchGenres = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8080/genres\");\n//         if (!response.ok) {\n//           throw new Error(`Failed to fetch genres. Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n//         setGenres(data.rows); // Assuming genres are in `rows`\n//       } catch (error) {\n//         console.error(\"Error fetching genres:\", error);\n//         setGenreError(\"Failed to load genres.\");\n//       }\n//     };\n\n//     fetchGenres();\n//   }, []);\n\n//   // Fetch artists on mount\n//   useEffect(() => {\n//     const fetchArtists = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8080/artists\");\n//         if (!response.ok) {\n//           throw new Error(`Failed to fetch artists. Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n\n//         // Assuming artists are in `rows`\n//         if (Array.isArray(data.rows)) {\n//           setArtists(data.rows);\n//         } else {\n//           throw new Error(\"Invalid response structure: Expected 'rows' to be an array\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching artists:\", error);\n//         setArtistError(\"Failed to load artists.\");\n//       }\n//     };\n\n//     fetchArtists();\n//   }, []);\n\n//   const handleSearchByGenre = async (e) => {\n//     e.preventDefault();\n//     setGenreError(\"\");\n//     setSongs([]);\n//     if (!selectedGenre) {\n//       setGenreError(\"Please select a genre.\");\n//       return;\n//     }\n\n//     if (!genreTerm) {\n//       setGenreError(\"Please select a results limit.\");\n//       return;\n//     }\n\n//     try {\n//       const encodedGenre = encodeURIComponent(selectedGenre);\n//       const response = await fetch(\n//         `http://localhost:8080/genres/${encodedGenre}/tracks?limit=${genreTerm}`\n//       );\n//       if (!response.ok) {\n//         throw new Error(`Failed to fetch songs by genre. Status: ${response.status}`);\n//       }\n//       const data = await response.json();\n//       setSongs(data); // Assuming data is an array of songs\n//     } catch (error) {\n//       console.error(\"Error fetching songs by genre:\", error);\n//       setGenreError(\"Failed to load songs by genre.\");\n//     }\n//   };\n\n//   const handleSearchByArtist = async (e) => {\n//     e.preventDefault();\n//     setArtistError(\"\");\n//     setSongs([]);\n//     if (!selectedArtist) {\n//       setArtistError(\"Please select an artist.\");\n//       return;\n//     }\n\n//     try {\n//       const encodedArtist = encodeURIComponent(selectedArtist);\n//       const response = await fetch(\n//         `http://localhost:8080/artists/${encodedArtist}/tracks`\n//       );\n//       if (!response.ok) {\n//         throw new Error(`Failed to fetch songs by artist. Status: ${response.status}`);\n//       }\n//       const data = await response.json();\n//       setSongs(data); // Assuming data is an array of songs\n//     } catch (error) {\n//       console.error(\"Error fetching songs by artist:\", error);\n//       setArtistError(\"Failed to load songs by artist.\");\n//     }\n//   };\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Grid, TextField, FormControlLabel, Checkbox, Slider, Button, Link } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nexport default function FeatureSelection() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [selectedSongId, setSelectedSongId] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [explicit, setExplicit] = useState(false);\n  const [duration, setDuration] = useState([60, 660]);\n  const [plays, setPlays] = useState([0, 1100000000]);\n  const [danceability, setDanceability] = useState([0, 1]);\n  const [energy, setEnergy] = useState([0, 1]);\n  const [valence, setValence] = useState([0, 1]);\n  const [pageSize, setPageSize] = useState(5);\n  const [error, setError] = useState(\"\");\n\n  // Fetch all songs on component mount for initial display\n  useEffect(() => {\n    const fetchAllSongs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/getAllAudioFeatures\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch songs. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setSongs(data || []); // Assuming data is an array of songs\n      } catch (error) {\n        console.error(\"Error fetching songs:\", error);\n        setError(\"Failed to load songs.\");\n      }\n    };\n    fetchAllSongs();\n  }, []);\n\n  // Columns for the DataGrid\n  const columns = [{\n    field: \"title\",\n    headerName: \"Title\",\n    width: 300,\n    renderCell: params => /*#__PURE__*/React.createElement(Link, {\n      onClick: () => setSelectedSongId(params.row.song_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, params.value)\n  }, {\n    field: \"duration\",\n    headerName: \"Duration\"\n  }, {\n    field: \"plays\",\n    headerName: \"Plays\"\n  }, {\n    field: \"danceability\",\n    headerName: \"Danceability\"\n  }, {\n    field: \"energy\",\n    headerName: \"Energy\"\n  }, {\n    field: \"valence\",\n    headerName: \"Valence\"\n  }, {\n    field: \"tempo\",\n    headerName: \"Tempo\"\n  }, {\n    field: \"key_mode\",\n    headerName: \"Key\"\n  }, {\n    field: \"explicit\",\n    headerName: \"Explicit\"\n  }];\n\n  // Handle search button click\n  const search = async () => {\n    setError(\"\"); // Reset error state\n\n    try {\n      const queryParams = new URLSearchParams({\n        title,\n        explicit,\n        duration_low: duration[0],\n        duration_high: duration[1],\n        plays_low: plays[0],\n        plays_high: plays[1],\n        danceability_low: danceability[0],\n        danceability_high: danceability[1],\n        energy_low: energy[0],\n        energy_high: energy[1],\n        valence_low: valence[0],\n        valence_high: valence[1]\n      });\n      const response = await fetch(`http://localhost:8080/searchSongs?${queryParams.toString()}`);\n      if (!response.ok) {\n        throw new Error(`Failed to search songs. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setSongs(data || []); // Assuming data is an array of songs\n    } catch (error) {\n      console.error(\"Error searching songs:\", error);\n      setError(\"Failed to load search results.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 5\n    }\n  }, selectedSongId && /*#__PURE__*/React.createElement(SongCard, {\n    songId: selectedSongId,\n    handleClose: () => setSelectedSongId(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }, \"Search Songs\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Title\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    label: \"Explicit\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: explicit,\n      onChange: e => setExplicit(e.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, \"Duration\"), /*#__PURE__*/React.createElement(Slider, {\n    value: duration,\n    min: 60,\n    max: 660,\n    step: 10,\n    onChange: (e, newValue) => setDuration(newValue),\n    valueLabelDisplay: \"auto\",\n    valueLabelFormat: value => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 42\n      }\n    }, formatDuration(value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, \"Plays (millions)\"), /*#__PURE__*/React.createElement(Slider, {\n    value: plays,\n    min: 0,\n    max: 1100000000,\n    step: 10000000,\n    onChange: (e, newValue) => setPlays(newValue),\n    valueLabelDisplay: \"auto\",\n    valueLabelFormat: value => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 42\n      }\n    }, value / 1000000),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, \"Danceability\"), /*#__PURE__*/React.createElement(Slider, {\n    value: danceability,\n    min: 0,\n    max: 1,\n    step: 0.01,\n    onChange: (e, newValue) => setDanceability(newValue),\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, \"Energy\"), /*#__PURE__*/React.createElement(Slider, {\n    value: energy,\n    min: 0,\n    max: 1,\n    step: 0.01,\n    onChange: (e, newValue) => setEnergy(newValue),\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }, \"Valence\"), /*#__PURE__*/React.createElement(Slider, {\n    value: valence,\n    min: 0,\n    max: 1,\n    step: 0.01,\n    onChange: (e, newValue) => setValence(newValue),\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    onClick: search,\n    style: {\n      left: \"50%\",\n      transform: \"translateX(-50%)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  }, \"Results\"), /*#__PURE__*/React.createElement(DataGrid, {\n    rows: songs,\n    columns: columns,\n    pageSize: pageSize,\n    rowsPerPageOptions: [5, 10, 25],\n    onPageSizeChange: newPageSize => setPageSize(newPageSize),\n    autoHeight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }\n  }));\n}\n\n// Helper function to format duration\n_s(FeatureSelection, \"r/RVyl4nqbxLte4tydVTwB0fusI=\");\n_c = FeatureSelection;\nfunction formatDuration(value) {\n  const minutes = Math.floor(value / 60);\n  const seconds = value % 60;\n  return `${minutes}:${seconds.toString().padStart(2, \"0\")}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 15\n    }\n  }, \"HomePage\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  }, \"Search Page\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  }, \"Genre Page\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:3000/collaboration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 15\n    }\n  }, \"Collaboration\")))));\n}\nvar _c;\n$RefreshReg$(_c, \"FeatureSelection\");","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","TextField","FormControlLabel","Checkbox","Slider","Button","Link","DataGrid","FeatureSelection","songs","setSongs","selectedSongId","setSelectedSongId","title","setTitle","explicit","setExplicit","duration","setDuration","plays","setPlays","danceability","setDanceability","energy","setEnergy","valence","setValence","pageSize","setPageSize","error","setError","fetchAllSongs","response","fetch","ok","Error","status","data","json","console","columns","field","headerName","width","renderCell","params","row","song_id","value","search","queryParams","URLSearchParams","duration_low","duration_high","plays_low","plays_high","danceability_low","danceability_high","energy_low","energy_high","valence_low","valence_high","toString","e","target","checked","newValue","formatDuration","left","transform","newPageSize","minutes","Math","floor","seconds","padStart"],"sources":["/Users/jp/Downloads/2024Fall/CIS 5500/CIS-550/website/client/src/pages/SoundPage.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import \"../style/SearchPage.css\";\n// import \"../index.css\";\n\n// // 改\n// export default function SearchSong() {\n//   const [genres, setGenres] = useState([]);\n//   const [artists, setArtists] = useState([]);\n//   const [songs, setSongs] = useState([]);\n\n//   // Error states for each section\n//   const [genreError, setGenreError] = useState(\"\");\n//   const [artistError, setArtistError] = useState(\"\");\n\n//   // States for Genre Search\n//   const [selectedGenre, setSelectedGenre] = useState(\"\");\n//   const [genreTerm, setGenreTerm] = useState(\"\");\n\n//   // State for Artist Search\n//   const [selectedArtist, setSelectedArtist] = useState(\"\");\n\n//   // Fetch genres on mount\n//   useEffect(() => {\n//     const fetchGenres = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8080/genres\");\n//         if (!response.ok) {\n//           throw new Error(`Failed to fetch genres. Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n//         setGenres(data.rows); // Assuming genres are in `rows`\n//       } catch (error) {\n//         console.error(\"Error fetching genres:\", error);\n//         setGenreError(\"Failed to load genres.\");\n//       }\n//     };\n\n//     fetchGenres();\n//   }, []);\n\n//   // Fetch artists on mount\n//   useEffect(() => {\n//     const fetchArtists = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:8080/artists\");\n//         if (!response.ok) {\n//           throw new Error(`Failed to fetch artists. Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n\n//         // Assuming artists are in `rows`\n//         if (Array.isArray(data.rows)) {\n//           setArtists(data.rows);\n//         } else {\n//           throw new Error(\"Invalid response structure: Expected 'rows' to be an array\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching artists:\", error);\n//         setArtistError(\"Failed to load artists.\");\n//       }\n//     };\n\n//     fetchArtists();\n//   }, []);\n\n//   const handleSearchByGenre = async (e) => {\n//     e.preventDefault();\n//     setGenreError(\"\");\n//     setSongs([]);\n//     if (!selectedGenre) {\n//       setGenreError(\"Please select a genre.\");\n//       return;\n//     }\n  \n//     if (!genreTerm) {\n//       setGenreError(\"Please select a results limit.\");\n//       return;\n//     }\n\n//     try {\n//       const encodedGenre = encodeURIComponent(selectedGenre);\n//       const response = await fetch(\n//         `http://localhost:8080/genres/${encodedGenre}/tracks?limit=${genreTerm}`\n//       );\n//       if (!response.ok) {\n//         throw new Error(`Failed to fetch songs by genre. Status: ${response.status}`);\n//       }\n//       const data = await response.json();\n//       setSongs(data); // Assuming data is an array of songs\n//     } catch (error) {\n//       console.error(\"Error fetching songs by genre:\", error);\n//       setGenreError(\"Failed to load songs by genre.\");\n//     }\n//   };\n\n//   const handleSearchByArtist = async (e) => {\n//     e.preventDefault();\n//     setArtistError(\"\");\n//     setSongs([]);\n//     if (!selectedArtist) {\n//       setArtistError(\"Please select an artist.\");\n//       return;\n//     }\n\n//     try {\n//       const encodedArtist = encodeURIComponent(selectedArtist);\n//       const response = await fetch(\n//         `http://localhost:8080/artists/${encodedArtist}/tracks`\n//       );\n//       if (!response.ok) {\n//         throw new Error(`Failed to fetch songs by artist. Status: ${response.status}`);\n//       }\n//       const data = await response.json();\n//       setSongs(data); // Assuming data is an array of songs\n//     } catch (error) {\n//       console.error(\"Error fetching songs by artist:\", error);\n//       setArtistError(\"Failed to load songs by artist.\");\n//     }\n//   };\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Grid,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Slider,\n  Button,\n  Link,\n} from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nexport default function FeatureSelection() {\n  const [songs, setSongs] = useState([]);\n  const [selectedSongId, setSelectedSongId] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [explicit, setExplicit] = useState(false);\n  const [duration, setDuration] = useState([60, 660]);\n  const [plays, setPlays] = useState([0, 1100000000]);\n  const [danceability, setDanceability] = useState([0, 1]);\n  const [energy, setEnergy] = useState([0, 1]);\n  const [valence, setValence] = useState([0, 1]);\n  const [pageSize, setPageSize] = useState(5);\n  const [error, setError] = useState(\"\");\n\n  // Fetch all songs on component mount for initial display\n  useEffect(() => {\n    const fetchAllSongs = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/getAllAudioFeatures\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch songs. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setSongs(data || []); // Assuming data is an array of songs\n      } catch (error) {\n        console.error(\"Error fetching songs:\", error);\n        setError(\"Failed to load songs.\");\n      }\n    };\n\n    fetchAllSongs();\n  }, []);\n\n  // Columns for the DataGrid\n  const columns = [\n    {\n      field: \"title\",\n      headerName: \"Title\",\n      width: 300,\n      renderCell: (params) => (\n        <Link onClick={() => setSelectedSongId(params.row.song_id)}>\n          {params.value}\n        </Link>\n      ),\n    },\n    { field: \"duration\", headerName: \"Duration\" },\n    { field: \"plays\", headerName: \"Plays\" },\n    { field: \"danceability\", headerName: \"Danceability\" },\n    { field: \"energy\", headerName: \"Energy\" },\n    { field: \"valence\", headerName: \"Valence\" },\n    { field: \"tempo\", headerName: \"Tempo\" },\n    { field: \"key_mode\", headerName: \"Key\" },\n    { field: \"explicit\", headerName: \"Explicit\" },\n  ];\n\n  // Handle search button click\n  const search = async () => {\n    setError(\"\"); // Reset error state\n\n    try {\n      const queryParams = new URLSearchParams({\n        title,\n        explicit,\n        duration_low: duration[0],\n        duration_high: duration[1],\n        plays_low: plays[0],\n        plays_high: plays[1],\n        danceability_low: danceability[0],\n        danceability_high: danceability[1],\n        energy_low: energy[0],\n        energy_high: energy[1],\n        valence_low: valence[0],\n        valence_high: valence[1],\n      });\n\n      const response = await fetch(\n        `http://localhost:8080/searchSongs?${queryParams.toString()}`\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to search songs. Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setSongs(data || []); // Assuming data is an array of songs\n    } catch (error) {\n      console.error(\"Error searching songs:\", error);\n      setError(\"Failed to load search results.\");\n    }\n  };\n\n  return (\n    <Container>\n      {selectedSongId && (\n        <SongCard\n          songId={selectedSongId}\n          handleClose={() => setSelectedSongId(null)}\n        />\n      )}\n      <h2>Search Songs</h2>\n      <Grid container spacing={6}>\n        {/* Title Input */}\n        <Grid item xs={8}>\n          <TextField\n            label=\"Title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            style={{ width: \"100%\" }}\n          />\n        </Grid>\n\n        {/* Explicit Checkbox */}\n        <Grid item xs={4}>\n          <FormControlLabel\n            label=\"Explicit\"\n            control={\n              <Checkbox\n                checked={explicit}\n                onChange={(e) => setExplicit(e.target.checked)}\n              />\n            }\n          />\n        </Grid>\n\n        {/* Duration Slider */}\n        <Grid item xs={6}>\n          <p>Duration</p>\n          <Slider\n            value={duration}\n            min={60}\n            max={660}\n            step={10}\n            onChange={(e, newValue) => setDuration(newValue)}\n            valueLabelDisplay=\"auto\"\n            valueLabelFormat={(value) => <div>{formatDuration(value)}</div>}\n          />\n        </Grid>\n\n        {/* Plays Slider */}\n        <Grid item xs={6}>\n          <p>Plays (millions)</p>\n          <Slider\n            value={plays}\n            min={0}\n            max={1100000000}\n            step={10000000}\n            onChange={(e, newValue) => setPlays(newValue)}\n            valueLabelDisplay=\"auto\"\n            valueLabelFormat={(value) => <div>{value / 1000000}</div>}\n          />\n        </Grid>\n\n        {/* Sliders for Danceability, Energy, and Valence */}\n        <Grid item xs={4}>\n          <p>Danceability</p>\n          <Slider\n            value={danceability}\n            min={0}\n            max={1}\n            step={0.01}\n            onChange={(e, newValue) => setDanceability(newValue)}\n            valueLabelDisplay=\"auto\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <p>Energy</p>\n          <Slider\n            value={energy}\n            min={0}\n            max={1}\n            step={0.01}\n            onChange={(e, newValue) => setEnergy(newValue)}\n            valueLabelDisplay=\"auto\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <p>Valence</p>\n          <Slider\n            value={valence}\n            min={0}\n            max={1}\n            step={0.01}\n            onChange={(e, newValue) => setValence(newValue)}\n            valueLabelDisplay=\"auto\"\n          />\n        </Grid>\n      </Grid>\n\n      {/* Search Button */}\n      <Button\n        onClick={search}\n        style={{ left: \"50%\", transform: \"translateX(-50%)\" }}\n      >\n        Search\n      </Button>\n\n      <h2>Results</h2>\n      <DataGrid\n        rows={songs}\n        columns={columns}\n        pageSize={pageSize}\n        rowsPerPageOptions={[5, 10, 25]}\n        onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\n        autoHeight\n      />\n    </Container>\n  );\n}\n\n// Helper function to format duration\nfunction formatDuration(value) {\n  const minutes = Math.floor(value / 60);\n  const seconds = value % 60;\n  return `${minutes}:${seconds.toString().padStart(2, \"0\")}`;\n\n\n\n\n  return (\n    <div>\n\n      {/* Navigation Bar */}\n      {/* 不要动 */}\n      <div id=\"navbar\">\n        <ul>\n          <li><a href=\"http://localhost:3000/\">HomePage</a></li>\n          <li><a href=\"http://localhost:3000/search\">Search Page</a></li>\n          <li><a href=\"http://localhost:3000/genre\">Genre Page</a></li>\n          <li><a href=\"http://localhost:3000/collaboration\">Collaboration</a></li>\n        </ul>\n      </div>\n\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}