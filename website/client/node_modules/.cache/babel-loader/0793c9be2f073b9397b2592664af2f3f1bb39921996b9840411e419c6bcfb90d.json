{"ast":null,"code":"var _jsxFileName = \"/Users/yiting/Desktop/CIS-550/website/client/src/pages/SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../style/SearchPage.css\"; // Import the external CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchSong() {\n  _s();\n  const [genres, setGenres] = useState([]); // State to store genres from API\n  const [selectedGenre, setSelectedGenre] = useState(\"\"); // State for selected genre\n  const [songs, setSongs] = useState([]);\n  const [numResults, setNumResults] = useState(0);\n  const [error, setError] = useState(\"\");\n\n  // Fetch genres from the API when the component mounts\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        var _data$;\n        const response = await fetch(\"http://localhost:8080/genres\"); // API endpoint\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch genres\");\n        }\n        const data = await response.json();\n        setGenres(data);\n        setSelectedGenre(((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.Genre) || \"\"); // Default to the first genre\n      } catch (err) {\n        console.error(err);\n        setError(\"Failed to load genres\");\n      }\n    };\n    fetchGenres();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSongs([]);\n    setNumResults(0);\n    if (!selectedGenre) {\n      setError(\"Please select a genre.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/tracks/genre/${selectedGenre}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch songs\");\n      }\n      const data = await response.json();\n      setSongs(data);\n      setNumResults(data.length);\n    } catch (err) {\n      console.error(err);\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"search-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"genre-select\",\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"genre-select\",\n        value: selectedGenre,\n        onChange: e => setSelectedGenre(e.target.value),\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.Genre,\n          children: genre.Genre\n        }, genre.ID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), numResults > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Found \", /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"num-results\",\n        children: numResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), \" result(s).\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"search-results\",\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release Date: \", song.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: song.track_url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Listen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, song.track_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchSong, \"l0XYN0hn2S/Dd5H8jWsnz3UU3Gk=\");\n_c = SearchSong;\nvar _c;\n$RefreshReg$(_c, \"SearchSong\");","map":{"version":3,"names":["React","useState","useEffect","SearchSong","genres","setGenres","selectedGenre","setSelectedGenre","songs","setSongs","numResults","setNumResults","error","setError","fetchGenres","response","fetch","ok","Error","data","json","Genre","err","console","handleSubmit","e","preventDefault","length","message","target","value","map","genre","ID","song","title","release_date","track_url","track_id"],"sources":["/Users/yiting/Desktop/CIS-550/website/client/src/pages/SearchPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../style/SearchPage.css\"; // Import the external CSS file\n\nexport default function SearchSong() {\n  const [genres, setGenres] = useState([]); // State to store genres from API\n  const [selectedGenre, setSelectedGenre] = useState(\"\"); // State for selected genre\n  const [songs, setSongs] = useState([]);\n  const [numResults, setNumResults] = useState(0);\n  const [error, setError] = useState(\"\");\n\n  // Fetch genres from the API when the component mounts\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/genres\"); // API endpoint\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch genres\");\n        }\n        const data = await response.json();\n        setGenres(data);\n        setSelectedGenre(data[0]?.Genre || \"\"); // Default to the first genre\n      } catch (err) {\n        console.error(err);\n        setError(\"Failed to load genres\");\n      }\n    };\n\n    fetchGenres();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setSongs([]);\n    setNumResults(0);\n\n    if (!selectedGenre) {\n      setError(\"Please select a genre.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:8080/tracks/genre/${selectedGenre}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch songs\");\n      }\n      const data = await response.json();\n      setSongs(data);\n      setNumResults(data.length);\n    } catch (err) {\n      console.error(err);\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div id=\"page-wrapper\">\n      <form id=\"search-form\" onSubmit={handleSubmit}>\n        <label htmlFor=\"genre-select\">Search:</label>\n\n        {/* Dropdown for Genre Selection */}\n        <select\n          id=\"genre-select\"\n          value={selectedGenre}\n          onChange={(e) => setSelectedGenre(e.target.value)}\n        >\n          {genres.map((genre) => (\n            <option key={genre.ID} value={genre.Genre}>\n              {genre.Genre}\n            </option>\n          ))}\n        </select>\n\n        {/* Search Button */}\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {/* Error Message */}\n      {error && <p className=\"error\">{error}</p>}\n\n      {/* Results Message */}\n      {numResults > 0 && (\n        <p>\n          Found <span id=\"num-results\">{numResults}</span> result(s).\n        </p>\n      )}\n\n      {/* Search Results */}\n      <div id=\"search-results\">\n        {songs.map((song) => (\n          <div key={song.track_id} className=\"song-item\">\n            <h3>{song.title}</h3>\n            <p>Release Date: {song.release_date}</p>\n            <a href={song.track_url} target=\"_blank\" rel=\"noopener noreferrer\">\n              Listen\n            </a>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}