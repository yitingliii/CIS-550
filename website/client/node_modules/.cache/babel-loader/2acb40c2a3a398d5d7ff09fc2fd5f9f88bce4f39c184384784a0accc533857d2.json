{"ast":null,"code":"var _jsxFileName = \"/Users/zhangfangce/Desktop/CIS-550/website/client/src/pages/GenrePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // For navigation\nimport \"../style/GenrePage.css\";\nimport \"../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GenrePage() {\n  _s();\n  const [topGenres, setTopGenres] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"\"); // For artist input\n  const [randomSongs, setRandomSongs] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\"); // For genre dropdown\n  const [numSongs, setNumSongs] = useState(\"\"); // For number of songs\n  const [genres, setGenres] = useState([]); // List of genres for dropdown\n  const [artistError, setArtistError] = useState(\"\");\n  const [genreError, setGenreError] = useState(\"\");\n  const [genreTracks, setGenreTracks] = useState([]); // Tracks for clicked genre\n  const [clickedGenre, setClickedGenre] = useState(\"\"); // Name of clicked genre\n  const history = useHistory(); // For navigation\n\n  // Fetch genres for the dropdown on mount\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/genres\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch genres. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setGenres(data.rows); // Assuming genres are in `rows`\n      } catch (error) {\n        console.error(\"Error fetching genres:\", error);\n        setGenreError(\"Failed to load genres.\");\n      }\n    };\n    fetchGenres();\n  }, []);\n\n  // Fetch random songs for Genre of the Day\n  const fetchRandomSongs = async e => {\n    e.preventDefault();\n    setGenreError(\"\");\n    setRandomSongs([]);\n    if (!selectedGenre.trim()) {\n      setGenreError(\"Please select a genre.\");\n      return;\n    }\n    if (!numSongs || isNaN(numSongs) || numSongs > 10 || numSongs < 1) {\n      setGenreError(\"Please enter a valid number of songs (1-10).\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/random-songs?genreName=${encodeURIComponent(selectedGenre)}&numSongs=${numSongs}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch random songs. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setRandomSongs(data.rows);\n    } catch (error) {\n      console.error(\"Error fetching random songs:\", error);\n      setGenreError(\"Failed to load songs for the selected genre.\");\n    }\n  };\n\n  // Navigate back to the main menu\n  const handleBackToMenu = () => {\n    history.push(\"/\"); // Navigate back to the main menu\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/\",\n            children: \"HomePage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/sound\",\n            children: \"Sound Lab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/genre\",\n            children: \"GenrePage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/collaboration\",\n            children: \"Collaboration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"page-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"genre-of-the-day\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDF1F Genre of the Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: fetchRandomSongs,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genre-form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"genre-select\",\n              value: selectedGenre,\n              onChange: e => setSelectedGenre(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select a Genre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: genre.genre,\n                children: genre.genre\n              }, genre.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genre-form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"num-songs-input\",\n              value: numSongs,\n              onChange: e => setNumSongs(e.target.value),\n              placeholder: \"Number of Songs (max 10)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"genre-form-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"\\uD83C\\uDFB5 Find Songs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), genreError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: genreError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 26\n        }, this), randomSongs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"random-songs-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u2728 Here are some songs from the \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedGenre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 49\n            }, this), \" genre. Click to listen! \\u2728\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: randomSongs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `http://${song.track_url}`,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: song.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"back-menu-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"back-menu-button\",\n          onClick: handleBackToMenu,\n          children: \"Back to Main Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(GenrePage, \"L2skbLO5liq4I2dnzK6zMvteJGA=\", false, function () {\n  return [useHistory];\n});\n_c = GenrePage;\nvar _c;\n$RefreshReg$(_c, \"GenrePage\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","GenrePage","topGenres","setTopGenres","selectedArtist","setSelectedArtist","randomSongs","setRandomSongs","selectedGenre","setSelectedGenre","numSongs","setNumSongs","genres","setGenres","artistError","setArtistError","genreError","setGenreError","genreTracks","setGenreTracks","clickedGenre","setClickedGenre","history","fetchGenres","response","fetch","ok","Error","status","data","json","rows","error","console","fetchRandomSongs","e","preventDefault","trim","isNaN","encodeURIComponent","handleBackToMenu","push","target","value","map","genre","id","length","song","index","track_url","title"],"sources":["/Users/zhangfangce/Desktop/CIS-550/website/client/src/pages/GenrePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // For navigation\nimport \"../style/GenrePage.css\";\nimport \"../index.css\";\n\nexport default function GenrePage() {\n  const [topGenres, setTopGenres] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"\"); // For artist input\n  const [randomSongs, setRandomSongs] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\"); // For genre dropdown\n  const [numSongs, setNumSongs] = useState(\"\"); // For number of songs\n  const [genres, setGenres] = useState([]); // List of genres for dropdown\n  const [artistError, setArtistError] = useState(\"\");\n  const [genreError, setGenreError] = useState(\"\");\n  const [genreTracks, setGenreTracks] = useState([]); // Tracks for clicked genre\n  const [clickedGenre, setClickedGenre] = useState(\"\"); // Name of clicked genre\n  const history = useHistory(); // For navigation\n\n  // Fetch genres for the dropdown on mount\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/genres\");\n        if (!response.ok) {\n          throw new Error(`Failed to fetch genres. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setGenres(data.rows); // Assuming genres are in `rows`\n      } catch (error) {\n        console.error(\"Error fetching genres:\", error);\n        setGenreError(\"Failed to load genres.\");\n      }\n    };\n\n    fetchGenres();\n  }, []);\n\n  // Fetch random songs for Genre of the Day\n  const fetchRandomSongs = async (e) => {\n    e.preventDefault();\n    setGenreError(\"\");\n    setRandomSongs([]);\n    if (!selectedGenre.trim()) {\n      setGenreError(\"Please select a genre.\");\n      return;\n    }\n    if (!numSongs || isNaN(numSongs) || numSongs > 10 || numSongs < 1) {\n      setGenreError(\"Please enter a valid number of songs (1-10).\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        `http://localhost:8080/random-songs?genreName=${encodeURIComponent(selectedGenre)}&numSongs=${numSongs}`\n      );\n      if (!response.ok) {\n        throw new Error(`Failed to fetch random songs. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setRandomSongs(data.rows);\n    } catch (error) {\n      console.error(\"Error fetching random songs:\", error);\n      setGenreError(\"Failed to load songs for the selected genre.\");\n    }\n  };\n\n  // Navigate back to the main menu\n  const handleBackToMenu = () => {\n    history.push(\"/\"); // Navigate back to the main menu\n  };\n\n  return (\n    <div>\n      {/* Navigation Bar */}\n      <div id=\"navbar\">\n        <ul>\n          <li><a href=\"http://localhost:3000/\">HomePage</a></li>\n          <li><a href=\"http://localhost:3000/sound\">Sound Lab</a></li>\n          <li><a href=\"http://localhost:3000/genre\">GenrePage</a></li>\n          <li><a href=\"http://localhost:3000/collaboration\">Collaboration</a></li>\n        </ul>\n      </div>\n\n      {/* Page Wrapper */}\n      <div id=\"page-wrapper\">\n        <section id=\"genre-of-the-day\">\n          <h2>🌟 Genre of the Day</h2>\n          <form onSubmit={fetchRandomSongs}>\n            <div className=\"genre-form-group\">\n              <select\n                id=\"genre-select\"\n                value={selectedGenre}\n                onChange={(e) => setSelectedGenre(e.target.value)}\n              >\n                <option value=\"\" disabled>\n                  Select a Genre\n                </option>\n                {genres.map((genre) => (\n                  <option key={genre.id} value={genre.genre}>\n                    {genre.genre}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"genre-form-group\">\n              <input\n                type=\"number\"\n                id=\"num-songs-input\"\n                value={numSongs}\n                onChange={(e) => setNumSongs(e.target.value)}\n                placeholder=\"Number of Songs (max 10)\"\n              />\n            </div>\n\n            <div id=\"genre-form-buttons\">\n              <button type=\"submit\">🎵 Find Songs</button>\n            </div>\n          </form>\n\n          {/* Display Genre Error Message */}\n          {genreError && <div className=\"error-message\">{genreError}</div>}\n\n          {/* Display Random Songs */}\n          {randomSongs.length > 0 && (\n            <div id=\"random-songs-list\">\n              <p>✨ Here are some songs from the <strong>{selectedGenre}</strong> genre. Click to listen! ✨</p>\n              <ul>\n                {randomSongs.map((song, index) => (\n                  <li key={index}>\n                    <a\n                      href={`http://${song.track_url}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {song.title}\n                    </a>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </section>\n\n        {/* Back to Main Menu */}\n        <div id=\"back-menu-wrapper\">\n          <button id=\"back-menu-button\" onClick={handleBackToMenu}>\n            Back to Main Menu\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}